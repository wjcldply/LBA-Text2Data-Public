{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking calmly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'talking', 'attribute': 'calmly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking affectionately.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'talking', 'attribute': 'affectionately'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person closely.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'smile'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'smile at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her mouth with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'mouth'}, {'object1': 'hand', 'relation': 'cover', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking to the other room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk to', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1 crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her face with her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hands'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'face'}, {'object1': 'hands', 'relation': 'cover', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is leaning against the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lean against', 'object2': 'couch'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is listening to the voice file in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung2', 'relation': 'listen', 'object2': 'voice file'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is listening to Jiya's voice from the recording.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'voice', 'attribute': 'Jiya'}, {'object1': 'voice', 'relation': 'from', 'object2': 'recording'}, {'object1': 'person', 'relation': 'listen', 'object2': 'voice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding the cellphone that is playing the voice file.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks devastated.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'devastated'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 and Dokyung are kissing each other in the photo.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'kiss', 'object2': 'Dokyung'}, {'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'photo'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'photo'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crossing her arms in the photo.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'cross', 'object2': 'arms'}, {'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'photo'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crying while leaning against the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'crying'}, {'object1': 'Haeyoung2', 'relation': 'lean against', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is beating her chest in tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'tears'}, {'object1': 'Haeyoung2', 'relation': 'beat', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is beating her chest in tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'tears'}, {'object1': 'Haeyoung2', 'relation': 'beat', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting with her seat belt fastened.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sitting'}, {'object1': 'Haeyoung2', 'relation': 'fastened', 'object2': 'seat belt'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a door handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'handle', 'attribute': 'door'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a door handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'handle', 'attribute': 'door'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening the door. Haeyoung1 is surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}, {'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening the door. Haeyoung1 is surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}, {'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking around with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}, {'object': 'Haeyoung1', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking around with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}, {'object': 'Haeyoung1', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is going inside.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'going inside'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road. Haeyoung1 wears a jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road. Haeyoung1 got the cast on her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}, {'object1': 'Haeyoung1', 'relation': 'get', 'object2': 'cast'}, {'object1': 'cast', 'relation': 'on', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking water. Dokyung is holding the bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking water. Dokyung is holding the bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person put a bottle on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bottle', 'relation': 'on', 'object2': 'table'}, {'object1': 'person', 'relation': 'put', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung touched his back of the neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'neck', 'attribute': 'back of'}, {'object1': 'Dokyung', 'relation': 'touch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white gown. Dokyung is thinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'thinking'}, {'object': 'gown', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'gown'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is about to cry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking with an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'angry'}, {'object': 'Deogi', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is holding a mic.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'hold', 'object2': 'mic'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are at the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'at', 'object2': 'restaurant'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is walking with a mic.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'walk with', 'object2': 'mic'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears big glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'big'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears big glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'big'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is cleaning the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'clean', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding a tray.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'tray'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is cleaning the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'clean', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is tidying up the bedding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tidy up', 'object2': 'bedding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is folding the blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'fold', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is spinning around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'spinning around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is spraying fragrance in her room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'spray', 'object2': 'fragrance'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a white hoodie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hoodie', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'hoodie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sniffing the air.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sniffing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting down on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit down on', 'object2': 'floor'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Sukyung is getting closer to Jinsang, Jinsang joins his hands nervously.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'nervous'}, {'object1': 'Sukyung', 'relation': 'get close', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing khaki clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'khaki'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at the person while wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Sukyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to the person seriously.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'serious'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang gazes at the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is starring at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'stare at', 'object2': 'Jinsang'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is grumbling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'grumbling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is leaving Haeyoung1 alone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is leaving Haeyoung1 alone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sets the deadline for Dokyung to call.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'set', 'object2': 'deadline'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 gets surprised by the phone vibration sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'vibration'}, {'object1': 'Haeyoung1', 'relation': 'surprised by', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's phone keeps vibrating on a bench.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'vibrating'}, {'object1': 'phone', 'relation': 'on', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 rushes towards her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'rush toward', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 rushes towards her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'rush toward', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 rushes towards her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'rush toward', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks disappointed looking at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'disappointed'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'something'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is laughing at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'laugh at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is throwing the stuff.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'throw', 'object2': 'stuff'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is picking his stuffs up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'pick up', 'object2': 'stuffs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun fell on the ground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'fall to', 'object2': 'ground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and other people are in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'in', 'object2': 'playground'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and other people are in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'in', 'object2': 'playground'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a navy cap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cap', 'attribute': 'navy'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'cap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his head down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put down', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks up again.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Two people are spending time in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object1': 'people', 'relation': 'spend time in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Two people are hanging from the iron bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object1': 'people', 'relation': 'hang from', 'object2': 'iron bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at people while sitting on a seesaw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'people'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'seesaw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at people while sitting on a seesaw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'people'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'seesaw'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding Haeyoung1's arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are walking on the street. Dokyung holds Haeyoung1's arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Dokyung', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are taking a taxi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take', 'object2': 'taxi'}, {'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'taxi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are taking a taxi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take', 'object2': 'taxi'}, {'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'taxi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is taking a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is taking a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are in the taxi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'in', 'object2': 'taxi'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'taxi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are standing on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stand on', 'object2': 'road'}, {'object1': 'Haeyoung1', 'relation': 'stand on', 'object2': 'road'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sending messages while sticking her tongue out smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'send', 'object2': 'messages'}, {'object1': 'Haeyoung1', 'relation': 'stick out', 'object2': 'tongue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: After sending messages to Jeongsuk, Haeyoung1 raises her right hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'right'}, {'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lean on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 smiles at the message from Jeongsuk and texts Jeongsuk back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'message', 'relation': 'from', 'object2': 'Jeongsuk'}, {'object1': 'Haeyoung1', 'relation': 'smile at', 'object2': 'message'}, {'object1': 'Haeyoung1', 'relation': 'text back', 'object2': 'Jeongsuk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is putting her fingers into her mouth reading the messages.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'read', 'object2': 'messages'}, {'object1': 'Jeongsuk', 'relation': 'put', 'object2': 'fingers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is wearing white clothes with patterns.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'clothes', 'relation': 'have', 'object2': 'patterns'}, {'object1': 'Jeongsuk', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is reading the messages.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'read', 'object2': 'messages'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack asks a question to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is closing his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is closing his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 says something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'say', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A car passes in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'car', 'attribute': 'passing'}, {'object1': 'car', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1, Deogi, and Kyungsu are walking in a row.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Deogi', 'attribute': 'walking'}, {'object': 'Kyungsu', 'attribute': 'walking'}, {'object': 'walking', 'attribute': 'in a row'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking at night.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk at', 'object2': 'night'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi asks Kyungsu about the cost.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'ask to', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is turning his head to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'head', 'relation': 'to', 'object2': 'Deogi'}, {'object1': 'Kyungsu', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 blinks her eyes slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blink', 'attribute': 'slowly'}, {'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens his mouth and eyes wide in shock.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'wide'}, {'object': 'eyes', 'attribute': 'wide'}, {'object': 'Dokyung', 'attribute': 'shocked'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'mouth'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is walking up the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'walk up', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is gasping for breath.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'gasping'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is rushing into the house to catch up Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'rush into', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking out loud.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking loud'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is just looking at Dokyung talking out loud.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking loud'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is telling Haeyoung1 to move away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a sad look on her face while speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closes the door and goes into the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'door'}, {'object1': 'Haeyoung1', 'relation': 'go into', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closes the door and goes into the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'door'}, {'object1': 'Haeyoung1', 'relation': 'go into', 'object2': 'house'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt with letters. Dokyung talks to grandfather.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'man'}, {'object1': 'shirt', 'relation': 'with', 'object2': 'letters'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The old man wears a hat and talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object1': 'man', 'relation': 'wear', 'object2': 'hat'}, {'object1': 'man', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The woman wears a pair of glasses. The woman looks at the old man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object': 'glasses', 'attribute': 'pair of'}, {'object1': 'woman', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'woman', 'relation': 'look at', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The old man talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object1': 'man', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks annoyed by the old man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object1': 'Dokyung', 'relation': 'annoyed by', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The woman is talking to Haeyoung1. The old man is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'man', 'attribute': 'old'}, {'object1': 'woman', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'man', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hayoung1 has got her mouth a little open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The woman is talking to Haeyoung1. Haeyoung1 has been sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'woman', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks deep in thought. Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'thinking', 'attribute': 'deep'}, {'object': 'Haeyoung1', 'attribute': 'thinking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The woman has black hair and talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'woman', 'relation': 'have', 'object2': 'hair'}, {'object1': 'woman', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is walking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'walking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the bench while staring at her side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'staring side'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is approaching the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'approach', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing face to face with Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'staring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears a scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Haeyoung2 are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 showed her apologies.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'apologizing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is worried about Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'worry about', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is drinking alcohol.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'drink', 'object2': 'alcohol'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting down in the alley.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting down'}, {'object1': 'Hun', 'relation': 'in', 'object2': 'alley'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is determined to kill Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'determined'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is raising his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun tries to stop Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'stop', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna starts crying and hugs Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'crying'}, {'object1': 'Anna', 'relation': 'hug', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is walking in the alley.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'walking'}, {'object1': 'person', 'relation': 'in', 'object2': 'alley'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks alone in the alley.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'alley'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks alone in the alley.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'alley'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his hand down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put down', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun gets angry with someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'angry at', 'object2': 'someone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding a yellow phone. Kyungsu talks on the phone. Deogi is under stress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'yellow'}, {'object': 'Deogi', 'attribute': 'under stress'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'phone'}, {'object1': 'Kyungsu', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is lying on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the doll on the bed. The doll is on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'doll', 'attribute': 'on'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'doll'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the doll and smiling slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'slight'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'doll'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is lying down on the bed with putting her hand on her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'lie on', 'object2': 'bed'}, {'object1': 'Deogi', 'relation': 'put', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'on', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi rolls her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'roll', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi lifted the blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'lift', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi puts away the blanket and sits up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'sitting up'}, {'object1': 'Deogi', 'relation': 'put away', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding a yellow phone and surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'yellow'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding a yellow phone and surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'surprised'}, {'object': 'phone', 'attribute': 'yellow'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack wears a brown scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'brown'}, {'object1': 'Soontack', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack hits Dokyung on the chest gently.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hit on', 'attribute': 'gently'}, {'object': 'chest', 'attribute': 'Dokyung'}, {'object1': 'Soontack', 'relation': 'hit on', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack and Dokyung are sitting in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'sitting'}, {'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Soontack', 'relation': 'in', 'object2': 'restaurant'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'restaurant'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack and Dokyung are sitting in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'sitting'}, {'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Soontack', 'relation': 'in', 'object2': 'restaurant'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'restaurant'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack and Dokyung are sitting in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'sitting'}, {'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Soontack', 'relation': 'in', 'object2': 'restaurant'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'restaurant'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is grabbing his hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'grab', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is grabbing his hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'grab', 'object2': 'hair'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1 with his hands on her waist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'waist', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'hand', 'relation': 'on', 'object2': 'waist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is touching Dokyung's face with her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'have', 'object2': 'face'}, {'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to a man while blinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'blinking'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is nodding his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'nod', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring at a man while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stare at', 'object2': 'man'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun frowns his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'frown'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna called Dokyung's name.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'calling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is raising his head up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'raise up', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna shuts her lips tightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shut', 'attribute': 'tightly'}, {'object1': 'Anna', 'relation': 'shut', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna and Hun are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'face', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun opens his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna wants to hug someone and say grateful.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is blinking his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is getting irritated.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'irritated'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a shirt with red stripes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shirt', 'relation': 'have', 'object2': 'red stripes'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is standing up slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is standing up slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding a hammer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'hammer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'food'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is touching his tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'touch', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A woman is next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'woman', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is laughing with sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting down'}, {'object': 'Jinsang', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are around Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'around', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The women are gathering to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'women', 'relation': 'gather', 'object2': 'Jinsang'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Taejin is yelling at the waiter, the waiter gets out from his arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'yell at', 'object2': 'waiter'}, {'object1': 'waiter', 'relation': 'get out from', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The waiter pushes away Taejin onto the couch talking to Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'on', 'object2': 'couch'}, {'object1': 'waiter', 'relation': 'talk to', 'object2': 'Taejin'}, {'object1': 'waiter', 'relation': 'push away', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The waiter pushes away Taejin onto the couch talking to Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'on', 'object2': 'couch'}, {'object1': 'waiter', 'relation': 'talk to', 'object2': 'Taejin'}, {'object1': 'waiter', 'relation': 'push away', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is sitting on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin talks to the waiter drunken.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'drunk'}, {'object1': 'Taejin', 'relation': 'talk to', 'object2': 'waiter'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin falls down on a couch drunk while the waiter is standing next to the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'drunk'}, {'object1': 'Taejin', 'relation': 'fall down', 'object2': 'couch'}, {'object1': 'waiter', 'relation': 'next to', 'object2': 'table'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is coming close to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'come close to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is holding the cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is bowing head down to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'bow down to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing up. Dokyung and Gitae are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing up'}, {'object1': 'Dokyung', 'relation': 'face', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing up. Dokyung and Gitae are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing up'}, {'object1': 'Dokyung', 'relation': 'face', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is looking with surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at someone in front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'someone'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok wears a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is pointing at Jiya with his finger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'finger', 'relation': 'point at', 'object2': 'Jiya'}, {'object1': 'Sangseok', 'relation': 'point at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya was staggered.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'staggered'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is turning his head and looking sideways.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'looking sideways'}, {'object1': 'Sangseok', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is watching the person passing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'passing'}, {'object1': 'Sangseok', 'relation': 'watch', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is hiding behind Sangseok.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'hiding'}, {'object1': 'Jiya', 'relation': 'behind', 'object2': 'Sangseok'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening the door and entering the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}, {'object1': 'Dokyung', 'relation': 'enter', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking irritably.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'talking', 'attribute': 'irritably'}, {'object': 'Gitae', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is hiding behind Sangseok with a look of surprise.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'surprised'}, {'object1': 'Jiya', 'relation': 'hide behind', 'object2': 'Sangseok'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's hands were hurt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hands', 'attribute': 'hurt'}, {'object': 'hands', 'attribute': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's hands were hurt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hands', 'attribute': 'hurt'}, {'object': 'hands', 'attribute': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung look serious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'serious'}, {'object': 'Haeyoung1', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung look serious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'serious'}, {'object': 'Haeyoung1', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Heeran are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'face', 'object2': 'Heeran'}, {'object1': 'Heeran', 'relation': 'face', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Heeran are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'face', 'object2': 'Heeran'}, {'object1': 'Heeran', 'relation': 'face', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung points out that someone has an expression of contempt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'pointing out'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran explains that it wasn't contempt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'explaining'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran has bobbed hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'bobbed'}, {'object1': 'Heeran', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran throws the script towards Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'script', 'relation': 'to', 'object2': 'Dokyung'}, {'object1': 'Heeran', 'relation': 'throw', 'object2': 'script'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran feels like Heeran did something very wrong.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'realizing'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turned her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is speaking in an angry voice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'speaking', 'attribute': 'angry'}, {'object': 'Dokyung', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 took off her glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'take off', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking fast.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'walking', 'attribute': 'fast'}, {'object': 'Haeyoung1', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk down', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is stepping down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'stepping down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is saying sorry to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'say to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is opening his eyes widely.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Kyungsu', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk has bobbed hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'bobbed'}, {'object1': 'Jeongsuk', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing next to Kyungsu.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'standing'}, {'object1': 'Deogi', 'relation': 'next to', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is talking with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'surprised'}, {'object': 'Jeongsuk', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi tied her hair to the back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'tie', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is picking up an apron.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'pick up', 'object2': 'apron'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking next to Kyungsu.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Deogi', 'relation': 'next to', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is saying something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hanging the laundry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hang', 'object2': 'laundry'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are surprised with looking at the dart. Chairman and Taejin leaves the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'surprised'}, {'object': 'Jinsang', 'attribute': 'surprised'}, {'object1': 'Dokyung, Jinsang', 'relation': 'look at', 'object2': 'dart'}, {'object1': 'Taejin, Chairman', 'relation': 'leave', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is bowing his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'bow', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is keeping his lips tight.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Chairman', 'relation': 'keep tight', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is raising his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking an elevator. Chairman looks at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Chairman', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'take', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Taejin are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Taejin'}, {'object1': 'Taejin', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Taejin are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Taejin'}, {'object1': 'Taejin', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling at Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'smile at', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are in the office. Jisang talks on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung, Jinsang', 'relation': 'in', 'object2': 'office'}, {'object1': 'Jinsang', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are in the office. Jisang talks on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung, Jinsang', 'relation': 'in', 'object2': 'office'}, {'object1': 'Jinsang', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his head to the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The car tires squeak as the car turns the corner.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tires', 'attribute': 'car'}, {'object': 'tires', 'attribute': 'squeaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung pulls his leg back just before the car moves past him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'pull back', 'object2': 'leg'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person steps back quickly to avoid the car hitting him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'stepping back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung avoids the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'avoid', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The car makes a screeching noise and halts.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'noise', 'attribute': 'screeching'}, {'object1': 'The car', 'relation': 'make', 'object2': 'noise'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok gets out of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'get out of', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok gets out of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'get out of', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok gets out of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'get out of', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'neck'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a gray suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'gray'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a gray suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'gray'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin got a bunch of flowers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'flowers', 'attribute': 'bunch of'}, {'object1': 'Taejin', 'relation': 'get', 'object2': 'flowers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin got a bunch of flowers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'flowers', 'attribute': 'bunch of'}, {'object1': 'Taejin', 'relation': 'get', 'object2': 'flowers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is opening his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is walking out of the shop with flowers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'walk out of', 'object2': 'shop'}, {'object1': 'Taejin', 'relation': 'with', 'object2': 'flowers'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung tells Haeyoung1 to meet at his house at night and Dokyung will make Haeyoung1 something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 answers on the phone smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung says something to Haeyoung1 on the phone, which makes Haeyoung1 laughs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'say', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding her cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung asks a question to Haeyoung1 after Haeyoung1 answers to Dokyung on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'ask to', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'answer', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun has short hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'short'}, {'object1': 'Hun', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is moving her body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'move', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is in panic.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'panic'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is walking to the office room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'walk to', 'object2': 'office room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya opened the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is leaving the office room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'leave', 'object2': 'office room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya faced with Hun and Sangseok.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'face with', 'object2': 'Hun'}, {'object1': 'Jiya', 'relation': 'face with', 'object2': 'Sangseok'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is yelling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'yelling'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking a question to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ask to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung breathes in deeply.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'breathing', 'attribute': 'deeply'}, {'object': 'Dokyung', 'attribute': 'breathing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks at a person with tears in her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'with', 'object2': 'tears'}, {'object1': 'tears', 'relation': 'in', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung warns Haeyoung1 to be careful of the cars.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'warn', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung leaves Haeyoung1 behind.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sighing and smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'sighing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks with his hand inside the pockets.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'hands', 'relation': 'inside', 'object2': 'pockets'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung suddenly raises his body hearing crashing sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'raise', 'object2': 'body'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is wearing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Dokyung is holding the microphone, the steam keeps coming up, making some noise.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'steam', 'attribute': 'coming up'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung blinks as the steam keeps coming up wearing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'blinking'}, {'object': 'steam', 'attribute': 'coming up'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While a person keeps recording the spinning sounds of a machine, Hun is eating some snacks wearing headphones up side down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'record', 'object2': 'spinning sounds'}, {'object1': 'Hun', 'relation': 'eat', 'object2': 'snacks'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding a microphone wearing headphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'microphone'}, {'object1': 'person', 'relation': 'wear', 'object2': 'headphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'looking down'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is rubbing his face and body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'rub', 'object2': 'face, body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is rubbing his face and body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'rub', 'object2': 'face, body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is naked. Dokyung is lost in thought.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'naked'}, {'object': 'Dokyung', 'attribute': 'lost in thought'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in front of the mirror. Dokyung is lost in thought.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'lost in thought'}, {'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'mirror'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wet. Dokyung is lost in thought.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'wet'}, {'object': 'Dokyung', 'attribute': 'lost in thought'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's nose is bleeding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'bleed at', 'object2': 'nose'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her eyes. Haeyoung1's nose is bleeding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'bleed at', 'object2': 'nose'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens the bottle and drinks water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'bottle'}, {'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has a depressed face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'depressed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding Jinsang's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is lying down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'lying down'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 breathes heavily in her striped T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung', 'attribute': 'breathing'}, {'object': 'breathing', 'attribute': 'heavily'}, {'object1': 'T', 'relation': 'shirt', 'object2': 'striped'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 breathes heavily in her striped T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung', 'attribute': 'breathing'}, {'object': 'breathing', 'attribute': 'heavily'}, {'object1': 'T', 'relation': 'shirt', 'object2': 'striped'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is doing the laundry while stomping in the bucket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'do', 'object2': 'laundry'}, {'object1': 'Haeyoung1', 'relation': 'stomp in', 'object2': 'bucket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is doing the laundry while stomping in the bucket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'do', 'object2': 'laundry'}, {'object1': 'Haeyoung1', 'relation': 'stomp in', 'object2': 'bucket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is doing the laundry while stomping in the bucket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'do', 'object2': 'laundry'}, {'object1': 'Haeyoung1', 'relation': 'stomp in', 'object2': 'bucket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'moving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'moving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is stepping on the laundry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'step on', 'object2': 'laundry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 moves her pony-tailed head furiously.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'move', 'attribute': 'furiously'}, {'object1': 'head', 'relation': 'pony', 'object2': 'tailed'}, {'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shouting at her cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shout at', 'object2': 'cellphone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is smiling next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'smiling'}, {'object1': 'Taejin', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is putting down her cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put down', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of the gate.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'gate'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of the gate.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'gate'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking off his earphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take off', 'object2': 'earphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 said no.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 raised her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is making a knot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'knot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a blue jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'blue'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks determined.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'determined'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on a sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'sofa'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with holding a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Haeyoung1', 'attribute': 'holding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with holding a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Haeyoung1', 'attribute': 'holding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with holding a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Haeyoung1', 'attribute': 'holding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is in the hallway.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'in', 'object2': 'hallway'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is driving a car on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'drive', 'object2': 'car'}, {'object1': 'car', 'relation': 'on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is driving a car on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'drive', 'object2': 'car'}, {'object1': 'car', 'relation': 'on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are around Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'around', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is checking vibration of cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'check', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is checking vibration of cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'check', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'drive', 'object2': 'car'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is poking her lips with chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'lips', 'relation': 'with', 'object2': 'chopsticks'}, {'object1': 'Anna', 'relation': 'poke', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is unfolding his index finger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'finger', 'attribute': 'index'}, {'object1': 'Hun', 'relation': 'unfold', 'object2': 'finger'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun picks up a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'pick up', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is asking a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is angry with Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'angry with', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is angry with Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'angry with', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna's necklace is mint colored.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'necklace', 'attribute': 'mint'}, {'object1': 'Anna', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking toward Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk toward', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking toward Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk toward', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking through the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'look through', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a black suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'black'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is praising the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'praise', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on a table while holding chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'table'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'chopsticks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Deogi are sitting at the table. Haeyoung1 talks to Deogi while holding chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Deogi', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Deogi'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'chopsticks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Deogi are sitting at the table. Haeyoung1 talks to Deogi while holding chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Deogi', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Deogi'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'chopsticks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking and Haeyoung1 is eating at the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'eat at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating and looking at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'eating'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her mouth to eat food. Haeyoung1 uses chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'use', 'object2': 'chopsticks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing up and going close to window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'standing up'}, {'object1': 'Deogi', 'relation': 'go close to', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking while eating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Haeyoung1', 'attribute': 'eating'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is dancing with coworkers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'dance with', 'object2': 'coworkers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is dancing with coworkers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'dance with', 'object2': 'coworkers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is singing with a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'sing with', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is drinking alcohol.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drink', 'object2': 'alcohol'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is singing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'singing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is moving her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'move', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 made a toast with people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'toast', 'relation': 'with', 'object2': 'people'}, {'object1': 'Haeyoung2', 'relation': 'make', 'object2': 'toast'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is watching movie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'watch', 'object2': 'movie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is watching movie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'watch', 'object2': 'movie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lying on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is fighting Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'fight', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sighing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sighing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding her chest.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'chest'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is approaching the women.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'approach', 'object2': 'women'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is approaching the women.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'approach', 'object2': 'women'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is tapping on the woman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'tap on', 'object2': 'woman'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to the women.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'women'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A woman is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'woman', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is covering her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'have', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'cover', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang spins around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'spinning around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a black scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'black'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is dancing with his fingers point to the left and right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'dance with', 'object2': 'figer point'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is dancing with his fingers point to the left and right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'dance with', 'object2': 'figer point'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang shakes his bums near Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bums', 'relation': 'near', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'shake', 'object2': 'bums'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang shakes his bums near Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bums', 'relation': 'near', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'shake', 'object2': 'bums'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is shaking her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'shake', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'dancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a white jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling brightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'smiling', 'attribute': 'brightly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is about to hug Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are holding each other's hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold hands', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'hold hands', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are walking side by side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are hugging on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}, {'object1': 'Haeyoung1 and Dokyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking to people at the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'at', 'object2': 'office'}, {'object1': 'Sungjin', 'relation': 'talk to', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking to people at the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'at', 'object2': 'office'}, {'object1': 'Sungjin', 'relation': 'talk to', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is looking at people and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'look at', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is looking at people and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'look at', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'talk', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'talk', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is shouting at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'shout at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking in front of people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'in front of', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears glasses. Sungjin is talking to people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is in the office. Sungjin is standing next to two ladies.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'ladies', 'attribute': 'two'}, {'object': 'Sungjin', 'attribute': 'standing'}, {'object1': 'Sungjin', 'relation': 'next to', 'object2': 'ladies'}, {'object1': 'Sungjin', 'relation': 'in', 'object2': 'office'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung holding her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Haeyoung1 is taking a picture Dokyung is gazing at the screen of her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'screen', 'relation': 'of', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'picture'}, {'object1': 'Dokyung', 'relation': 'gaze at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'sit next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 shows Dokyung the picture that Haeyoung1 has taken.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'picture', 'attribute': 'taken'}, {'object1': 'Haeyoung1', 'relation': 'show', 'object2': 'picture'}, {'object1': 'picture', 'relation': 'to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'sit next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung grab the spoon to have a meal.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'grab', 'object2': 'spoon'}, {'object1': 'Dokyung', 'relation': 'grab', 'object2': 'spoon'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is scratching her neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'scratch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 got off the elevator.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'get off', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 got off the elevator.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'get off', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shaking her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shaking her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks disgusted.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'disgusted'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a red scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 keeps talking. Haeyoung1 puts her hands together over her chest.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'hands', 'relation': 'on', 'object2': 'chest'}, {'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the chair. Companies return to their seats.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'companies', 'relation': 'return to', 'object2': 'seats'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown. Haeyoung1 keeps talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs. Haeyoung1 keeps talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stretches her arm. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'stretch', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crossing her legs. Haeyoung1 stretches her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'cross', 'object2': 'legs'}, {'object1': 'Haeyoung1', 'relation': 'stretch', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 puts her arm on the armrest. Haeyoung1 notices Sukyung is passing by.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'arm'}, {'object1': 'arm', 'relation': 'on', 'object2': 'armrest'}, {'object1': 'Haeyoung1', 'relation': 'notice', 'object2': 'Sukyung'}, {'object1': 'Sukyung', 'relation': 'pass by', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses. Sukyung look at Haeyoung1. Haeyoung1 look at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a green blouse. Sukyung wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'green'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'blouse'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is zeroing in on Gitae again with her bat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'zero in', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a traditional Korean outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'traditional Korean'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae lifts his eyes up to Sukyung with his eyes wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide open'}, {'object1': 'Gitae', 'relation': 'lift up', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Gitae', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is clearing his throat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'clear', 'object2': 'throat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is now wearing flower patterned dress with white dotted red hair band.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair band', 'attribute': 'white dotted'}, {'object': 'hair band', 'attribute': 'red'}, {'object': 'dress', 'attribute': 'flower patterned'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'dress'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'hair band'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is putting her hand on her waist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'on', 'object2': 'waist'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'waist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is moving his mouth awkwardly gazing at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'move', 'object2': 'mouth'}, {'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'Sukyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a big black hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'big'}, {'object': 'hat', 'attribute': 'black'}, {'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is blaming Chairman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'blame', 'object2': 'Chairman'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is holding a clutch bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'hold', 'object2': 'clutch bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is holding a clutch bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'hold', 'object2': 'clutch bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her mouth with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in front of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'house'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is moving her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'moving'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang gazes at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A necklace in the frame is hanging on the wall, Sukyung is getting closer to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'necklace', 'relation': 'hang on', 'object2': 'wall'}, {'object1': 'Sukyung', 'relation': 'get close', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung talks to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his hand in the pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'in', 'object2': 'pocket'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is saying it's good to see Dokyung in the morning.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look', 'object2': 'front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening the car door for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening the car door for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are in the hospital. Sukyung is sitting on bed. Jinsang is next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'bed'}, {'object1': 'Sukyung', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are in the hospital. Sukyung is sitting on bed. Jinsang is next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'bed'}, {'object1': 'Sukyung', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Jinsang are sitting in the hospital.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object': 'Sukyung', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'hospital'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Jinsang are sitting in the hospital.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object': 'Sukyung', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'hospital'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'hospital'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Sukyung. Jinsang is standing up and pointing fingers in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing up'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'point', 'object2': 'fingers'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Sukyung. Jinsang is standing up and pointing fingers in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing up'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'point', 'object2': 'fingers'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking and showing something from taking out his pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'something', 'relation': 'taken out from', 'object2': 'pocket'}, {'object1': 'Jinsang', 'relation': 'show', 'object2': 'something'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing. There is a star on Haeyoung1's shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object': 'shirt', 'attribute': 'Haeyoung1'}, {'object1': 'star', 'relation': 'on', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has entered his house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'enter', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking toward Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk toward', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking toward Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk toward', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a beige pullover. Dokyung talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'pullover', 'attribute': 'beige'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'pullover'}, {'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is explaining the reason.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'explaining'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is making a sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is indicating the door with her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'indicate', 'object2': 'door'}, {'object1': 'door', 'relation': 'with', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is indicating the door with her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'indicate', 'object2': 'door'}, {'object1': 'door', 'relation': 'with', 'object2': 'arm'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lying on the ground. Dokyung wears headphones. Bag and box is near Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'ground'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}, {'object1': 'bag', 'relation': 'near', 'object2': 'Dokyung'}, {'object1': 'box', 'relation': 'near', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking while crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'crying'}, {'object': 'Jiya', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white T-shirt. Dokyung got into a car accident.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'white'}, {'object1': 'Dokyung', 'relation': 'get into', 'object2': 'car accident'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung hugged Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are standing on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand on', 'object2': 'road'}, {'object1': 'Dokyung', 'relation': 'stand on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is yelling to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'yell to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung leaves Haeyoung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears rounded glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'rounded'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pushing something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'push', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pushing something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'push', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 entered the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'enter', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a person on her back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'on', 'object2': 'back'}, {'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding person's arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'person'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lying on a bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 barely managed to raise Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'raise', 'attribute': 'barely'}, {'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is lying on a bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung enters a room and has locked the door. Jiya looks at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'enter', 'object2': 'room'}, {'object1': 'Dokyung', 'relation': 'lock', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a big screen in front of Dokyung. Dokyung is sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object': 'screen', 'attribute': 'big'}, {'object1': 'screen', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has kept quiet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'quiet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is working. Jiya is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'working'}, {'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is working. Jiya is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'working'}, {'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Yijoon and Sangseok are looking at Jiya. Jiya has noticed that there are Yijoon and Sangseok.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'noticed'}, {'object1': 'Yijoon', 'relation': 'look at', 'object2': 'Jiya'}, {'object1': 'Sangseok', 'relation': 'look at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Yijoon and Sangseok are making a bow.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Yijoon', 'attribute': 'making a bow'}, {'object': 'Sangseok', 'attribute': 'making a bow'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya has passed by Yijoon and Sangseok without any greeting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'pass by', 'object2': 'Yijoon'}, {'object1': 'Jiya', 'relation': 'pass by', 'object2': 'Sangseok'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is talking. Yijoon is next to Sangseok.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'talking'}, {'object1': 'Yijoon', 'relation': 'next to', 'object2': 'Sangseok'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok has a frown face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'frown'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dozing off in the workplace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dozing off'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'workplace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dozing off in the workplace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dozing off'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'workplace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dozing off in the workplace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dozing off'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'workplace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is handing over the file to Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'file', 'relation': 'to', 'object2': 'Sungjin'}, {'object1': 'Sukyung', 'relation': 'hand over', 'object2': 'file'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is handing over the file to Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'file', 'relation': 'to', 'object2': 'Sungjin'}, {'object1': 'Sukyung', 'relation': 'hand over', 'object2': 'file'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is falling backwards while dozing off.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dozing off'}, {'object': 'Haeyoung1', 'attribute': 'falling backwards'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is falling backwards while dozing off.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dozing off'}, {'object': 'Haeyoung1', 'attribute': 'falling backwards'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a bang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at the left side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'left'}, {'object1': 'Sukyung', 'relation': 'look', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking in front of coworkers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'talking'}, {'object1': 'person', 'relation': 'in front of', 'object2': 'coworkers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking upwards.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking upwards'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung gives Haeyoung2 a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'microphone', 'relation': 'to', 'object2': 'Haeyoung2'}, {'object1': 'Sukyung', 'relation': 'give', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung stands still.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is starring at a picture of Haeyoung2 with written letters of thanks for loving me June 10th, 2016.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'picture', 'relation': 'of', 'object2': 'Haeyoung2'}, {'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'picture'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung stands still gazing at the album.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'gaze at', 'object2': 'album'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung now gazes at the picture of himself again with the written letters says thank for loving June 10th, 2016.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'picture', 'relation': 'with', 'object2': 'written letters'}, {'object1': 'Dokyung', 'relation': 'gaze at', 'object2': 'picture'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling in the picture.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'picture'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are around Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'around', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is wearing an orange tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tie', 'attribute': 'orange'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is having a panic attack on a street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'on', 'object2': 'street'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'panic attack'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is having a panic attack on a street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'on', 'object2': 'street'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'panic attack'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding onto a fence and a person is calling someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'fence'}, {'object1': 'person', 'relation': 'call', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is in a hospital.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'hospital'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is in a hospital.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'hospital'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 seems depressed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'depressed'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking with hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1. Haeyoung1 sheds tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the house. Haeyoung1 hold Dokyung's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'house'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung with holding hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}, {'object': 'hand', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are facing each other. Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is leaving and going to the other room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'room'}, {'object1': 'Dokyung', 'relation': 'go to', 'object2': 'other room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 runs out of the house. Dokyung follows Haeyoung1. Haeyoung1 leaves Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'run out of', 'object2': 'house'}, {'object1': 'Dokyung', 'relation': 'follow', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung says to Jinsang that Sukyung likes melons.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'say to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Dokyung while taking a glance at the melon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'glance at', 'object2': 'melon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning is back to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn back to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks away pulling the cart while Jinsang is standing still holding the melon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'pull', 'object2': 'cart'}, {'object1': 'Jinsang', 'relation': 'hold', 'object2': 'melon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is holding a fruit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'hold', 'object2': 'fruit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang holds up the melon into his chest and follows Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'hold', 'object2': 'melon'}, {'object1': 'Jinsang', 'relation': 'follow', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung took off her glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'take off', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung took off her glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'take off', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking on a bridge.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'walk on', 'object2': 'bridge'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a clutch bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bag', 'attribute': 'clutch'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking to a person on the bridge.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'walk to', 'object2': 'person'}, {'object1': 'person', 'relation': 'on', 'object2': 'bridge'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is closing her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking on the bridge with a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'with', 'object2': 'person'}, {'object1': 'Sukyung', 'relation': 'walk on', 'object2': 'bridge'}]<|eot_id|>"}
{"Text_FewShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object1\": \"Dokyung\",\n            \"relation\": \"drive\",\n            \"object2\": \"car\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"white\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"phone\",\n            \"attribute\": \"call\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"make\",\n            \"object2\": \"phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"tie\",\n            \"attribute\": \"red\"\n        },\n        {\n            \"object1\": \"Haeyoung2\",\n            \"relation\": \"wear\",\n            \"object2\": \"tie\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung2\",\n            \"attribute\": \"looking left\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Sukyung\",\n            \"attribute\": \"looking down\"\n        },\n        {\n            \"object1\": \"Sukyung\",\n            \"relation\": \"hold\",\n            \"object2\": \"cell phone\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"person\",\n            \"attribute\": \"talking\"\n        },\n        {\n            \"object1\": \"person\",\n            \"relation\": \"sit on\",\n            \"object2\": \"couch\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"name\",\n            \"attribute\": \"Haeyoung1\"\n        },\n        {\n            \"object\": \"screen\",\n            \"attribute\": \"phone\"\n        },\n        {\n            \"object1\": \"name\",\n            \"relation\": \"appear\",\n            \"object2\": \"screen\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"clothes\",\n            \"attribute\": \"black\"\n        },\n        {\n            \"object1\": \"Deogi\",\n            \"relation\": \"wear\",\n            \"object2\": \"clothes\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking in a emotional way.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n{\n    \"extracted_KGs\": [\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"emotional\"\n        },\n        {\n            \"object\": \"Haeyoung1\",\n            \"attribute\": \"speaking\"\n        }\n    ]\n}<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung kicked the held bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bottle', 'attribute': 'held'}, {'object1': 'Sukyung', 'relation': 'kick', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is making a gesture to come.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'make', 'object2': 'gesture'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'yelling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking around Haeyoung1. Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'walk around', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is losing her temper.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lose', 'object2': 'temper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is kicking in the air near Haeyoung1. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'kick in', 'object2': 'air'}, {'object1': 'Sukyung', 'relation': 'near', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shaking her arm. Haeyoung1 is talking to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'arm'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking. Sukyung stood up suddenly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'Sukyung', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Haeyoung1 are facing each other. Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'face', 'object2': 'Haeyoung1'}]<|eot_id|>"}
