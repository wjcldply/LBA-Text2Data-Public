{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding a silverware.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'silverware'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is eating food with a fork.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'eat', 'object2': 'food'}, {'object1': 'food', 'relation': 'with', 'object2': 'fork'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lie on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is picking Hun's ear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'have', 'object2': 'ear'}, {'object1': 'Anna', 'relation': 'pick', 'object2': 'ear'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is holding on an ear pick.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'hold on', 'object2': 'ear pick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is moving her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Anna', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is breathing into Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'breath into', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on Anna's lap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lap', 'attribute': 'Anna'}, {'object1': 'Hun', 'relation': 'lie on', 'object2': 'lap'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung took off his cap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take off', 'object2': 'cap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung touches his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'touch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung turned his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is working at the cafe.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'work at', 'object2': 'cafe'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung took off his earphone. Dokyung wears a black watch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'watch', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wears', 'object2': 'watch'}, {'object1': 'Dokyung', 'relation': 'take off', 'object2': 'earphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok, Yijoon, and Gitae are making a sound. Gitae is ripping off a vegetable with headphone on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'rip off', 'object2': 'vegetable'}, {'object1': 'Gitae', 'relation': 'wear', 'object2': 'headphone'}, {'object1': 'Sangseok, Yijoon, Gitae', 'relation': 'make', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok, Yijoon, and Gitae are making a sound. Gitae is ripping off a vegetable with headphone on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'rip off', 'object2': 'vegetable'}, {'object1': 'Gitae', 'relation': 'wear', 'object2': 'headphone'}, {'object1': 'Sangseok, Yijoon, Gitae', 'relation': 'make', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are looking at the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking. Gitae looks annoyed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'Gitae', 'attribute': 'annoyed'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a big screen in front of Hun and Gitae. Hun and Gitae are working. Gitae is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'working'}, {'object': 'Gitae', 'attribute': 'working'}, {'object': 'screen', 'attribute': 'big'}, {'object1': 'Gitae, Hun', 'relation': 'in front of', 'object2': 'screen'}, {'object1': 'Gitae', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is responding to the caller.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'responding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun asks to Gitae. Gitae answers to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'ask to', 'object2': 'Gitae'}, {'object1': 'Gitae', 'relation': 'answer to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun has started looking at Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae asks to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'ask to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun has opened his eyes wide.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Hun', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking to Gitae while sitting on the chair. Gitae is next to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'talk to', 'object2': 'Gitae'}, {'object1': 'Hun', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Gitae', 'relation': 'next to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is surprised. Hun has stood up with anger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'surprised'}, {'object': 'Hun', 'attribute': 'anger'}, {'object': 'Hun', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is surprised. Hun has stood up with anger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'surprised'}, {'object': 'Hun', 'attribute': 'anger'}, {'object': 'Hun', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae hold the phone. Hun takes the phone from Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'hold', 'object2': 'phone'}, {'object1': 'Hun', 'relation': 'take', 'object2': 'phone'}, {'object1': 'phone', 'relation': 'from', 'object2': 'Gitae'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with his arms outstretched.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arms', 'attribute': 'outstretched'}, {'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is turning his head aside with an irritating look.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'irritated'}, {'object': 'head', 'attribute': 'aside'}, {'object1': 'Hun', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at Jinsang talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking upwards.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'looking upwards'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing behind the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'behind', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing behind the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'behind', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to himself.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing up from the seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'stand from', 'object2': 'seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are around Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'around', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is backing away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'backing away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking with looking at the left side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'left'}, {'object': 'Anna', 'attribute': 'talking'}, {'object1': 'Anna', 'relation': 'look', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Dokyung. Hun is looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking back'}, {'object1': 'Anna', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is holding a manicure at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'at', 'object2': 'home'}, {'object1': 'Anna', 'relation': 'hold', 'object2': 'manicure'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is picking up a phone and running to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'pick up', 'object2': 'phone'}, {'object1': 'Anna', 'relation': 'run to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is handing a phone to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'hand', 'object2': 'phone'}, {'object1': 'phone', 'relation': 'to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Dokyung and sitting on chair. Anna is holding a cushion.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Anna', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Anna', 'relation': 'hold', 'object2': 'cushion'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Dokyung and sitting on chair. Anna is holding a cushion.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Anna', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Anna', 'relation': 'hold', 'object2': 'cushion'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is taking off her clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'take off', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is about to throw clothes. Jeongsuk is talkig. Kyungsu holds Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'talking'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'Deogi'}, {'object1': 'Deogi', 'relation': 'throw', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is making dumplings and Deogi is about to look back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking back'}, {'object1': 'Jeongsuk', 'relation': 'make', 'object2': 'dumplings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning around and looking at Jeongsuk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'turning around'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'Jeongsuk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding Deogi's arm. Deogi walks to Jeongsuk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Deogi'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'arm'}, {'object1': 'Deogi', 'relation': 'walk to', 'object2': 'Jeongsuk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding Deogi's arm. Deogi walks to Jeongsuk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Deogi'}, {'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'arm'}, {'object1': 'Deogi', 'relation': 'walk to', 'object2': 'Jeongsuk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking back. Deogi is looking at Jeongsuk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'looking back'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'Jeongsuk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is talking with holding a dumpling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'talking'}, {'object1': 'Jeongsuk', 'relation': 'hold', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at an document.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'document'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting next to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is standing in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'standing'}, {'object1': 'person', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is wearing a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a bag while walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a blue dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dress', 'attribute': 'blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears blue eye shadow.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eye shadow', 'attribute': 'blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'eye shadow'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of the show window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'show window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in front of the show window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'show window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears red lipstick.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lipstick', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'lipstick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears red lipstick.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lipstick', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'lipstick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stops and looks at the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are standing on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stand on', 'object2': 'road'}, {'object1': 'Haeyoung1', 'relation': 'stand on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talks to Haeyoung1 and leaving Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talks to Haeyoung1 and leaving Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the boxes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'boxes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing next to truck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'truck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding a dough roller.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'dough roller'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is rolling the dough with a dough roller after spraying it with flour.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'spray with', 'object2': 'flour'}, {'object1': 'dough', 'relation': 'with', 'object2': 'dough roller'}, {'object1': 'Kyungsu', 'relation': 'roll', 'object2': 'dough'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is rolling the dough with a dough roller after spraying it with flour.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'spray with', 'object2': 'flour'}, {'object1': 'dough', 'relation': 'with', 'object2': 'dough roller'}, {'object1': 'Kyungsu', 'relation': 'roll', 'object2': 'dough'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Haeyoung1 are making dumplings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'make', 'object2': 'dumplings'}, {'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'dumplings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is putting a shrimp in the dumpling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'put', 'object2': 'shrimp'}, {'object1': 'shrimp', 'relation': 'in', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is putting a shrimp in the dumpling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'put', 'object2': 'shrimp'}, {'object1': 'shrimp', 'relation': 'in', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is carefully making dumplings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'make', 'attribute': 'carefully'}, {'object1': 'Kyungsu', 'relation': 'make', 'object2': 'dumplings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is making dumpling very carefully.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'make', 'attribute': 'carefuly'}, {'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is folding the edge of the dumpling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dumpling', 'attribute': 'edge of'}, {'object1': 'Haeyoung1', 'relation': 'fold', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 slams open the door and rushes down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'slam', 'object2': 'door'}, {'object1': 'Haeyoung1', 'relation': 'rush down', 'object2': 'stairs'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is near the bottle. Hun is eating and holding Gimbap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'eating'}, {'object1': 'Hun', 'relation': 'near', 'object2': 'bottle'}, {'object1': 'Hun', 'relation': 'hold', 'object2': 'Gimbap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'eat', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna's hair is long curly hair. Anna wears a green vest. Anna is looking at goods.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'curly'}, {'object': 'hair', 'attribute': 'long'}, {'object': 'vest', 'attribute': 'green'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Anna', 'relation': 'wear', 'object2': 'vest'}, {'object1': 'Anna', 'relation': 'look at', 'object2': 'goods'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna brushes her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'brush', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna brushes her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'brush', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the chair. Hun is eating. Anna wears a green vest and a red skirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'vest', 'attribute': 'green'}, {'object': 'skirt', 'attribute': 'red'}, {'object': 'Hun', 'attribute': 'eating'}, {'object1': 'Hun', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is supporting her jaw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'support', 'object2': 'jaw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun turns his head. Hun look at Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'turn', 'object2': 'head'}, {'object1': 'Hun', 'relation': 'look at', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is opening her eyes. Anna is supporting her jaw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'open', 'object2': 'eyes'}, {'object1': 'Anna', 'relation': 'support', 'object2': 'jaw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is in the car. Jinsang is embarrassed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is making a calling gesture in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'gesture', 'attribute': 'calling'}, {'object1': 'Jinsang', 'relation': 'make', 'object2': 'gesture'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang drives a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung takes a sigh. Dokyung looks at the wallet on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take', 'object2': 'sigh'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'wallet'}, {'object1': 'wallet', 'relation': 'on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung tried to cross the road. The wallet is on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'cross', 'object2': 'road'}, {'object1': 'wallet', 'relation': 'on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is stepping back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'stepping back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person walks close to the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'walk close', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road. Dokyung looks at Haeyoung1<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1. Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in front of the cars. Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'cars'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is crying while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'crying'}, {'object': 'Jiya', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her head aside.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on the bench.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on the bench.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is standing on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'stand on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a red top.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'top', 'attribute': 'red'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'top'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears gray clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'gray'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has black hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung2 are playing ping pong.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'play', 'object2': 'ping pong'}, {'object1': 'Haeyoung2', 'relation': 'play', 'object2': 'ping pong'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hitting the ping pong ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'ball', 'attribute': 'ping pong'}, {'object1': 'Dokyung', 'relation': 'hit', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hitting the ping pong ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'ball', 'attribute': 'ping pong'}, {'object1': 'Dokyung', 'relation': 'hit', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung passed the ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'pass', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 has the ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is moving his arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'move', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 hit the ball strongly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hit', 'attribute': 'strongly'}, {'object1': 'Haeyoung2', 'relation': 'hit', 'object2': 'ball'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking to his right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is standing in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'stand in', 'object2': 'kitchen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing an apron.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wear', 'object2': 'apron'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is walking in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'walk in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The mirror is on the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mirror', 'relation': 'on', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The mirror is on the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mirror', 'relation': 'on', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is washing their face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'have', 'object2': 'face'}, {'object1': 'person', 'relation': 'wash', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'person', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening his eyes. Dokyung wears the headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking. Dokyung wears the headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones.'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is running to Hun. Anna walk arm in arm with Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'run to', 'object2': 'Hun'}, {'object1': 'Anna', 'relation': 'walk arm in arm with', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is holding the strap of the bag. Anna is talking. Anna is in front of Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}, {'object1': 'strap', 'relation': 'of', 'object2': 'bag'}, {'object1': 'Anna', 'relation': 'hold', 'object2': 'strap'}, {'object1': 'Anna', 'relation': 'in front of', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna smiles slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'slight'}, {'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna and Hun are walking. Anna walks arm in arm with Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'walk with', 'object2': 'Anna'}, {'object1': 'Anna', 'relation': 'arm in arm with', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is leaning on Hun's shoulder. Anna and Hun are walking together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'lean on', 'object2': 'shoulder'}, {'object1': 'Hun', 'relation': 'walk with', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is nodding and smiling. Anna leans on Hun's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'nodding'}, {'object': 'Anna', 'attribute': 'smiling'}, {'object': 'shoulder', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'lean on', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is touching his neck. Hun is talking with Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'touch', 'object2': 'neck'}, {'object1': 'Hun', 'relation': 'talk with', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is touching his neck. Hun is talking with Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'touch', 'object2': 'neck'}, {'object1': 'Hun', 'relation': 'talk with', 'object2': 'Anna'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing at home. Deogi puts rubber gloves together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'home'}, {'object1': 'Deogi', 'relation': 'puts together', 'object2': 'rubber gloves'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at Haeyoung1 dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi takes off apron. Haeyoung1 and Deogi are dancing in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object': 'Deogi', 'attribute': 'dancing'}, {'object1': 'Deogi', 'relation': 'take off', 'object2': 'apron'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Deogi', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is dancing with Haeyoung1 at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'dance with', 'object2': 'Haeyoung1'}, {'object1': 'Deogi, Haeyoung1', 'relation': 'at', 'object2': 'home'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'home'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Deogi are dancing in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object': 'Deogi', 'attribute': 'dancing'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Deogi', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'home'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is eating something while watching TV.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'eat', 'object2': 'something'}, {'object1': 'Kyungsu', 'relation': 'watch', 'object2': 'TV'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Kyungsu are in the room. Deogi talks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Deogi', 'relation': 'in', 'object2': 'room'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking next to Kyungsu.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Kyungsu'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is turning her head aside.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a glass cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cup', 'attribute': 'glass'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears gray clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'gray'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a serious face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is picking up a straw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'pick up', 'object2': 'straw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is about to drink something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'drinking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is bleeding at her nose.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'bleed at', 'object2': 'nose'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks happy.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a brown coat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'coat', 'attribute': 'brown'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'coat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is crossing her arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'cross', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting between the people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sitting'}, {'object1': 'Haeyoung2', 'relation': 'between', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2's hair is long.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'hair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a white dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dress', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'face', 'object2': 'Sukyung'}, {'object1': 'Sukyung', 'relation': 'face', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is staggering while Sukyung is leaning over to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'staggering'}, {'object1': 'Sukyung', 'relation': 'lean over', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a white dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dress', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is trying to kiss Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'try to kiss', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Sukyung is smiling at the camera, Jinsang is sending a kiss to Sukyung with his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'smiling'}, {'object1': 'kiss', 'relation': 'with', 'object2': 'hand'}, {'object1': 'Jinsang', 'relation': 'send', 'object2': 'kiss'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang brings some bottles of beer to his guests during his housewarming party.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'beer', 'attribute': 'bottles of'}, {'object1': 'Jinsang', 'relation': 'bring', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang brings some bottles of beer to his guests during his housewarming party.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'beer', 'attribute': 'bottles of'}, {'object1': 'Jinsang', 'relation': 'bring', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung said it's impossible.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is standing next the standing mic.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'standing'}, {'object1': 'Sangseok', 'relation': 'next to', 'object2': 'standing mic'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is recording a horse sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sound', 'attribute': 'horse'}, {'object1': 'Sangseok', 'relation': 'record', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is recording a horse sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sound', 'attribute': 'horse'}, {'object1': 'Sangseok', 'relation': 'record', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is touching a horse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'touch', 'object2': 'horse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling when Dokyung sees the horse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'see', 'object2': 'horse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is watching a horse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'watch', 'object2': 'horse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking out sound tape from the machine and putting the sound tape in case. Dokyung uses a pen to write.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take out', 'object2': 'sound tape'}, {'object1': 'sound tape', 'relation': 'from', 'object2': 'machine'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'sound tape'}, {'object1': 'sound tape', 'relation': 'in', 'object2': 'case'}, {'object1': 'Dokyung', 'relation': 'use', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking out sound tape from the machine and putting the sound tape in case. Dokyung uses a pen to write.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take out', 'object2': 'sound tape'}, {'object1': 'sound tape', 'relation': 'from', 'object2': 'machine'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'sound tape'}, {'object1': 'sound tape', 'relation': 'in', 'object2': 'case'}, {'object1': 'Dokyung', 'relation': 'use', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding the case in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'case'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is admiring with looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'admiring'}, {'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is surprised and looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking back'}, {'object': 'Dokyung', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking around the room. Dokyung close eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look around', 'object2': 'room'}, {'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised to see the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised and smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking serious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is closing the shoe rack.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'shoe rack'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at Haeyoung1 going out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding on the cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold on', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'bus'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'bus'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning against the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bus'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is working. Hun wears a red shirt. Dokyung wears a black jacket. Dokyung watches Hun is working.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object': 'jacket', 'attribute': 'black'}, {'object': 'Hun', 'attribute': 'working'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}, {'object1': 'Dokyung', 'relation': 'watch', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Hun are watching the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'watch', 'object2': 'screen'}, {'object1': 'Hun', 'relation': 'watch', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting in front of the monitor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'in front of', 'object2': 'monitor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung moves a little. Hun look at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'moving'}, {'object1': 'Hun', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung closes his eyes and lowers his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}, {'object1': 'Dokyung', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears headphones. Hun closes his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'wear', 'object2': 'headphones'}, {'object1': 'Hun', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun took off his headphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'take off', 'object2': 'headphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears a red shirt. Dokyung wear a black jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object': 'jacket', 'attribute': 'black'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung turns his head and looks at Hun next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun puts the headphone around his neck. Hun is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'headphone', 'relation': 'on', 'object2': 'neck'}, {'object1': 'Hun', 'relation': 'put', 'object2': 'headphone'}, {'object1': 'Hun', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun froze from terror of watching Dokyung. Hun stands near the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'standing'}, {'object': 'Hum', 'attribute': 'frozed'}, {'object1': 'Hun', 'relation': 'watch', 'object2': 'Dokyung'}, {'object1': 'Hun', 'relation': 'near', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok shook his finger at the person and left his seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'shake', 'object2': 'finger'}, {'object1': 'Sangseok', 'relation': 'leave', 'object2': 'seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok shook his finger at the person and left his seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'shake', 'object2': 'finger'}, {'object1': 'Sangseok', 'relation': 'leave', 'object2': 'seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a cup. Hun stands near table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cup'}, {'object1': 'Hun', 'relation': 'near', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks down his cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look down', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun's hair is brown. Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Hun', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking. Hun's hair is brown. Dokyung is holding cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Hun', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun screamed and hunched his body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'screaming'}, {'object1': 'Hun', 'relation': 'hunch', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is screaming near the sink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hun', 'attribute': 'screaming'}, {'object1': 'Hun', 'relation': 'near', 'object2': 'sink'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white T-shirt. Dokyung looks at Hun. Hun wears red shirts and screams.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'screaming'}, {'object': 'shirts', 'attribute': 'red'}, {'object1': 'T', 'relation': 'shirt', 'object2': 'white'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirts'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Haeyoung1 stopped walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'stop walking'}, {'object': 'Haeyoung1', 'attribute': 'stop walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'turning back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Sukyung are standing on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object': 'Sukyung', 'attribute': 'standing'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is pointing forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'point', 'object2': 'forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks annoyed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'annoyed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting down on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit down on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting down on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit down on', 'object2': 'floor'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is reading a text message.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'read', 'object2': 'text message'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has brown hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'has', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin has a pen in his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'pen', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sungjin', 'relation': 'have', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin has a pen in his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'pen', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sungjin', 'relation': 'have', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'staring front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closed her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are eating steak in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'eat', 'object2': 'steak'}, {'object1': 'Sukyung', 'relation': 'eat', 'object2': 'steak'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are eating steak in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'eat', 'object2': 'steak'}, {'object1': 'Sukyung', 'relation': 'eat', 'object2': 'steak'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is sitting in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is eating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'eating'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung asks someone to hold him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'ask', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 puts her arms around Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'arms'}, {'object1': 'arms', 'relation': 'around', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 hugs Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung rests his head on someone's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'someone'}, {'object1': 'Dokyung', 'relation': 'rest', 'object2': 'head'}, {'object1': 'head', 'relation': 'on', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 hugs someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a white jumper.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jumper', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'jumper'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking in a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is driving the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'sitting'}, {'object1': 'Sangseok', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is listening to Haeyoung1 with an anxiety face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'anxiety'}, {'object1': 'Gitae', 'relation': 'listen to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting behind Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'behind', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is urgently waving her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wave', 'object2': 'hand'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are leaving. Anna is talking to Dokyung and Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'leaving'}, {'object': 'Hun', 'attribute': 'leaving'}, {'object1': 'Anna', 'relation': 'talk to', 'object2': 'Dokyung, Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are leaving. Anna is talking to Dokyung and Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'leaving'}, {'object': 'Hun', 'attribute': 'leaving'}, {'object1': 'Anna', 'relation': 'talk to', 'object2': 'Dokyung, Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'kiss', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'kiss', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are kissing in the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'kiss', 'object2': 'Anna'}, {'object1': 'Hun', 'relation': 'in', 'object2': 'bed'}, {'object1': 'Anna', 'relation': 'in', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is getting up behind Hun and Anna. Hun and Anna are kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'getting up'}, {'object1': 'person', 'relation': 'behind', 'object2': 'Hun, Anna'}, {'object1': 'Hun', 'relation': 'kiss', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is turning her head to the side at a certain noise.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is surprised and screaming.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'surprised'}, {'object': 'Anna', 'attribute': 'screaming'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is surprised and screaming.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'surprised'}, {'object': 'Anna', 'attribute': 'screaming'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks with Sukyung. Sukyung is sitting on chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks with Sukyung. Sukyung is sitting on chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking with looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'Sukyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is saying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at document with holding a pen. Haeyoung1 is standing in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Sukyung', 'relation': 'look at', 'object2': 'document'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'pen'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Sukyung in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1, Sukyung', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Sukyung in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1, Sukyung', 'relation': 'in', 'object2': 'office'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung left Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is screaming.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'screaming'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding up the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 got mad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'mad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking by plants.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk by', 'object2': 'plants'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung touched his back of the neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'neck', 'attribute': 'back of'}, {'object1': 'Dokyung', 'relation': 'touch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung put down his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put down', 'object2': 'hand'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Dokyung at the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jiya', 'relation': 'at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jiya are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'smiling'}, {'object': 'Jiya', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'smiling'}, {'object': 'Jiya', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Dokyung with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'smiling'}, {'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sticking her face out of the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stick', 'object2': 'face'}, {'object1': 'face', 'relation': 'out of', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung stares to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'staring side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks disappointed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'disappointed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stares to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'staring', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 fixes her collar in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'fix', 'object2': 'collar'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is grumbling in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'grumbling'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is running with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'running'}, {'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears a red scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'red'}, {'object1': 'person', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person pushed a closing button.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'button', 'attribute': 'close'}, {'object1': 'person', 'relation': 'push', 'object2': 'button'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's bag is black.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bag', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's bag is black.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bag', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is rolling eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'roll', 'object2': 'eyes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks good.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking upwards.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking upwards'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 gets on the elevator.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'get on', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is near people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'near', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's muffler has black patterns.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'muffler', 'attribute': 'black patterns'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'muffler'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is running with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'running'}, {'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is bleeding to death on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'bleeding'}, {'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is bleeding to death on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'bleeding'}, {'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lying on the road with his eyes closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lie on', 'object2': 'road'}, {'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is bleeding from his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'bleeding'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is blinking and talking calmly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'blinking'}, {'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'talking', 'attribute': 'slowly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is blinking and talking calmly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'blinking'}, {'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'talking', 'attribute': 'slowly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking about what would happen if Dokyung were to die.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is sitting next to Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'sitting'}, {'object1': 'Sangseok', 'relation': 'next to', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks up to the book shelf and moves his hand to the album.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk up', 'object2': 'book shelf'}, {'object1': 'Dokyung', 'relation': 'take out', 'object2': 'album'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung picks up the album of May 2014.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'album', 'attribute': 'May 2014'}, {'object1': 'Dokyung', 'relation': 'pick up', 'object2': 'album'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung picks up the album of May 2014.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'album', 'attribute': 'May 2014'}, {'object1': 'Dokyung', 'relation': 'pick up', 'object2': 'album'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung flips the pages of the album.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'pages', 'relation': 'of', 'object2': 'album'}, {'object1': 'Dokyung', 'relation': 'flip', 'object2': 'pages'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung flips the pages of the album.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'pages', 'relation': 'of', 'object2': 'album'}, {'object1': 'Dokyung', 'relation': 'flip', 'object2': 'pages'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is holding a pen in his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'pen', 'relation': 'in', 'object2': 'hand'}, {'object1': 'Sungjin', 'relation': 'hold', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning her head to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'surprise at', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'Sungjin', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is writing with a pen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'write with', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is writing with a pen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'write with', 'object2': 'pen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look to', 'object2': 'side'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is patting Hun on the head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'pat on', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is giving Hun a sausage.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'give', 'object2': 'sausage'}, {'object1': 'Hun', 'relation': 'receive', 'object2': 'sausage'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is getting a sausage.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'get', 'object2': 'sausage'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is looking at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking at Hun eating sausages.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'eat', 'object2': 'sausages'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with a sausage in his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'sausage', 'relation': 'in', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the sausage.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'sausage'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking right'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is annoyed to see a person wailing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'annoyed'}, {'object': 'person', 'attribute': 'wailing'}, {'object1': 'Jinsang', 'relation': 'see', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang leans on the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lean on', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang leans on the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lean on', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang leans on the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lean on', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding her mobile phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'mobile phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang says Jinsang knows French really well.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'saying'}, {'object1': 'Jinsang', 'relation': 'know', 'object2': 'French'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Dokyung are talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung screams and grabs her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'screaming'}, {'object1': 'Sukyung', 'relation': 'grab', 'object2': 'hair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is smiling with money.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is smiling with money.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is standing at the store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'standing'}, {'object1': 'Anna', 'relation': 'at', 'object2': 'store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is asking a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'ask', 'object2': 'question'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is turning to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'turning to left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with a serious face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking at the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'look at', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in an office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is waving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wave', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a black suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'black'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is walking out of the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'walk out', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin stopped walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'stop', 'object2': 'walking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a red sweatshirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sweatshirt', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'sweatshirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a white top.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'top', 'attribute': 'white'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'top'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning her back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'turning back'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung throws her bat into the air and catches the bat with one hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'throw', 'object2': 'bat'}, {'object1': 'bat', 'relation': 'in', 'object2': 'air'}, {'object1': 'Sukyung', 'relation': 'catch', 'object2': 'bat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is facing to the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'face', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang stares at Sukyung while catching a bat with his mouth open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'stare at', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is facing to the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'face', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks at Sukyung scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'scared'}, {'object': 'Sukyung', 'attribute': 'scared'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung catches the bat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'catch', 'object2': 'bat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lifting a person up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lift up', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 comes back on the ground while continuing to scuffle and fight back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'fighting back'}, {'object': 'Haeyoung1', 'attribute': 'scuffling'}, {'object1': 'Haeyoung1', 'relation': 'come back', 'object2': 'ground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding Haeyoung1's head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung dives in to Haeyoung1's face to kiss her.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'dive into', 'object2': 'face'}, {'object1': 'Dokyung', 'relation': 'kiss', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's hands quickly leave Haeyoung1's waist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hands', 'attribute': 'Dokyung'}, {'object': 'waist', 'attribute': 'Haeyoung1'}, {'object1': 'hands', 'relation': 'leave', 'object2': 'waist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung steps back from a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'step back from', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person Is leaving the girl behind.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'leave', 'object2': 'girl'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's eyes quickly look down at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's eyes quickly look down at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down at her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stood up and walked away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing up'}, {'object': 'Haeyoung1', 'attribute': 'walking away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking behind Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is following Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'follow', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk in', 'object2': 'building'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stopped walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'stop walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is running with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'running'}, {'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung keeps his mouth closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is considering something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'considering'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has a serious face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stand in', 'object2': 'house'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu has black hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'Kyungsu', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a bowl.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'bowl'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is moving his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'move', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a towel on her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'towel', 'relation': 'on', 'object2': 'head'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'towel'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Kyungsu are sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'sit on', 'object2': 'floor'}, {'object1': 'Kyungsu', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning her head and looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking down'}, {'object1': 'Deogi', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi, Kyungsu, and Haeyoung1 are in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'in', 'object2': 'room'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'room'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi, Kyungsu, and Haeyoung1 are in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'in', 'object2': 'room'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'room'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'room'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang apologies to Dokyung with lowering his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'apology to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Dokyung while Dokyung keeps silent.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Dokyung keeps silent, Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at his left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': \"looking one's left\"}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang passes away behind Dokyung while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'pass away', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is jumping up to catch the butterfly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'jumping up'}, {'object1': 'person', 'relation': 'catch', 'object2': 'butterfly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is jumping.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'jumping'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person calls his dad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'call', 'object2': 'dad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is grabbing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'grab', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is asking a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person said try listening.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A butterfly is on the flower.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'butterfly', 'relation': 'on', 'object2': 'flower'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person goes closer to flowers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'go closer to', 'object2': 'flowers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person turns his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'turn', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a striped tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tie', 'attribute': 'striped'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is standing next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'standing'}, {'object1': 'Sungjin', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is standing next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'standing'}, {'object1': 'Sungjin', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin and Haeyoung1 are dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'dancing'}, {'object1': 'Sungjin', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin and Haeyoung1 are dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'dancing'}, {'object1': 'Sungjin', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin and Haeyoung1 are dancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'dancing'}, {'object1': 'Sungjin', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is dancing behind Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'dancing'}, {'object': 'Haeyoung1', 'attribute': 'dancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is dancing behind Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'dancing'}, {'object': 'Haeyoung1', 'attribute': 'dancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shaking her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung nods and bites her lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'nodding'}, {'object1': 'Sukyung', 'relation': 'bite', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a jacket. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a light brown coat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'coat', 'attribute': 'light brown'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'coat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with closing eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling. Haeyoung1 closes her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung smiled slightly and bit her lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'smiling'}, {'object': 'smiling', 'attribute': 'slightly'}, {'object1': 'Sukyung', 'relation': 'bite', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking and drunk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Haeyoung1', 'attribute': 'drunk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her body and looking back. Sukyung wears a beige outerwear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'outerwear', 'attribute': 'beige'}, {'object': 'Sukyung', 'attribute': 'looking back'}, {'object1': 'Sukyung', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her body and looking back. Sukyung wears a beige outerwear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'outerwear', 'attribute': 'beige'}, {'object': 'Sukyung', 'attribute': 'looking back'}, {'object1': 'Sukyung', 'relation': 'turn', 'object2': 'body'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is stretching her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'stretch', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A bat is in front of a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bat', 'relation': 'in front of', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears black socks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'socks', 'attribute': 'black'}, {'object1': 'person', 'relation': 'wear', 'object2': 'socks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is falling on the ground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'fall on', 'object2': 'ground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang was surprised by the bat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears white clothes under the shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}, {'object1': 'clothes', 'relation': 'under', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears the black pants.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'pants', 'attribute': 'black'}, {'object1': 'person', 'relation': 'wear', 'object2': 'pants'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looked frightened.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'frightened'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung pulled the person's tie. Haeyoung1 and man are behind Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tie', 'attribute': 'person'}, {'object1': 'Sukyung', 'relation': 'pull', 'object2': 'tie'}, {'object1': 'Haeyoung1', 'relation': 'behind', 'object2': 'Sukyung'}, {'object1': 'man', 'relation': 'behind', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses. Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung bites the dumpling and gives the dumpling to man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'give', 'attribute': 'to man'}, {'object1': 'Sukyung', 'relation': 'bite', 'object2': 'dumpling'}, {'object1': 'Sukyung', 'relation': 'give', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung bites the dumpling and gives the dumpling to man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'give', 'attribute': 'to man'}, {'object1': 'Sukyung', 'relation': 'bite', 'object2': 'dumpling'}, {'object1': 'Sukyung', 'relation': 'spit', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung put the dumpling in the person's mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'person'}, {'object1': 'dumpling', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung put the dumpling in the person's mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'person'}, {'object1': 'dumpling', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a striped jacket. Sukyung put the dumpling in the person's mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'striped'}, {'object': 'mouth', 'attribute': 'person'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'jacket'}, {'object1': 'dumpling', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a striped jacket. Sukyung put the dumpling in the person's mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'striped'}, {'object': 'mouth', 'attribute': 'person'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'jacket'}, {'object1': 'dumpling', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'dumpling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is stir-frying some sliced vegetables.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a frying pan.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'frying pan'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a frying pan.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'frying pan'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is kneading the dough.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'knead', 'object2': 'dough'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu has flour on his cheeks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'flour', 'relation': 'on', 'object2': 'cheeks'}, {'object1': 'Kyungsu', 'relation': 'have', 'object2': 'flour'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Haeyoung1 are changing positions.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'change', 'object2': 'positions'}, {'object1': 'Deogi', 'relation': 'change', 'object2': 'positions'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Haeyoung1 are changing positions.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'change', 'object2': 'positions'}, {'object1': 'Deogi', 'relation': 'change', 'object2': 'positions'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a white T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person makes the sauce.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'make', 'object2': 'sauce'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'spoon'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung lifted her glasses once.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'lift', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking Sungjin to wake her up when Sukyung comes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ask to', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is trying to wake Haeyoung1 up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wake', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is trying to wake Haeyoung1 up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wake', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 springs up from her sleep.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'spring up', 'object2': 'sleep'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning her head and looking behind her.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking behind'}, {'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is sighing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'sighing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling at Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'yell at', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears gold-rimmed glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'glasses', 'relation': 'gold', 'object2': 'rimmed'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is covering his mouth with his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking through the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look through', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is walking at the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'walk at', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is moving her hand in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'in', 'object2': 'room'}, {'object1': 'Heeran', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Heeran', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is wearing a black dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dress', 'attribute': 'black'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting in front of the laptop.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'in front of', 'object2': 'laptop'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is anxious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'anxious'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae has mustache on his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mustache', 'relation': 'on', 'object2': 'face'}, {'object1': 'Gitae', 'relation': 'have', 'object2': 'mustache'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking back at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is passing by Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'pass by', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is walking behind Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'walk behind', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding clothes on his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'clothes', 'relation': 'on', 'object2': 'hand'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is rubbing his hair with his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hair', 'relation': 'with', 'object2': 'hand'}, {'object1': 'Jinsang', 'relation': 'rub', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang tilts his head back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tilt', 'attribute': 'back'}, {'object1': 'Jinsang', 'relation': 'tilt', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking with his face down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object': 'Dokyung', 'attribute': 'facing down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is walking behind Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'walk behind', 'object2': 'Hun'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at the report.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'report'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is turning over the paper.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'turn over', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is at the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'at', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 looks depressed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'depressed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking to another person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person1', 'relation': 'talk to', 'object2': 'person2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Jinsang on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is turning his head to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'turn', 'attribute': 'right'}, {'object1': 'Jinsang', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is falling down on the street. Jinsang looks at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'falling down'}, {'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung fell down on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'falling down'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is lying down on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'lying down'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking and looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object': 'Jinsang', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is lying down on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'lying down'}, {'object1': 'Sukyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun, Gitae, Sangseok, and Yijoon are laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun, Gitae, Sangseok, Yijoon', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun, Gitae, Sangseok, and Yijoon are laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun, Gitae, Sangseok, Yijoon', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun, Gitae, Sangseok, and Yijoon are laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun, Gitae, Sangseok, Yijoon', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun, Gitae, Sangseok, and Yijoon are getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun, Gitae, Sangseok, Yijoon', 'attribute': 'get surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Sangseok are hitting Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hit', 'object2': 'Gitae'}, {'object1': 'Sangseok', 'relation': 'hit', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in front of the desk. Dokyung is agonizing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'agonizing'}, {'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'desk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is coming in through the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'come in through', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is coming in through the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'come in through', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is coming in through the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'come in through', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on a chair. Dokyung is agonizing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'agonizing'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing striped clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'clothes', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is carrying a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'carry', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Letters are stuck in the mailbox.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Letters', 'relation': 'stuck in', 'object2': 'mailbox'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person takes out an envelope.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'take out', 'object2': 'envelope'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is checking the mail in the mailbox.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'check', 'object2': 'mail'}, {'object1': 'mail', 'relation': 'in', 'object2': 'mailbox'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is checking the mail in the mailbox.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'check', 'object2': 'mail'}, {'object1': 'mail', 'relation': 'in', 'object2': 'mailbox'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a striped shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shirt', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing on a street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'standing'}, {'object1': 'Deogi', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is entering the gate with reading the mail.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'enter', 'object2': 'gate'}, {'object1': 'Deogi', 'relation': 'read', 'object2': 'mail'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is entering the gate with reading the mail.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'enter', 'object2': 'gate'}, {'object1': 'Deogi', 'relation': 'read', 'object2': 'mail'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung went to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'go to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has a short hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'short'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 shook off Dokyung's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'shake off', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is tapping her face herself.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tap', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at her own reflection.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'mirror'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears red lipsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lipstick', 'attribute': 'red'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'lipstick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is sitting next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'sitting'}, {'object1': 'Heeran', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking outside of the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look outside', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to the car window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'car window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking out the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look out', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning against the window frame.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'window frame'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the car seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'car seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'head'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is sitting next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'sit next to', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is touching her face with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'face', 'relation': 'with', 'object2': 'hand'}, {'object1': 'Haeyoung2', 'relation': 'touch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sweeping her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'sweep', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and people are around a table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'around', 'object2': 'table'}, {'object1': 'people', 'relation': 'around', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and a person are holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'cup'}, {'object1': 'person', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is starting to speak.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is gesturing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'gesturing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 and a person are looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'look at', 'object2': 'Sukyung'}, {'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is behind a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'behind', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her head to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is telling Haeyoung1 not to cross over.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is telling Haeyoung1 not to cross over.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is moving the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'move', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is moving the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'move', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is stepping up on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'step up', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi took a box out from the shelf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'take', 'object2': 'box'}, {'object1': 'box', 'relation': 'from', 'object2': 'shelf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi took a box out from the shelf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'take', 'object2': 'box'}, {'object1': 'box', 'relation': 'from', 'object2': 'shelf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi took a box out from the shelf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'take', 'object2': 'box'}, {'object1': 'box', 'relation': 'from', 'object2': 'shelf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is taking the box to the sink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'take', 'object2': 'box'}, {'object1': 'box', 'relation': 'to', 'object2': 'sink'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a pan behind Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'pan'}, {'object1': 'Deogi', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating with spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat with', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is putting down a pan. Deogi takes a deep breath.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'breath', 'attribute': 'deep'}, {'object1': 'Deogi', 'relation': 'put down', 'object2': 'pan'}, {'object1': 'Deogi', 'relation': 'take', 'object2': 'breath'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is coming out of the house and facing Dokyung. Dokyung leans on the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'go out', 'object2': 'house'}, {'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'lean on', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is saying hi to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'say', 'attribute': 'hi'}, {'object1': 'Haeyoung1', 'relation': 'say to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in front of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking and giving a cellphone to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'give', 'object2': 'cellphone'}, {'object1': 'cellphone', 'relation': 'to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking and giving a cellphone to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'give', 'object2': 'cellphone'}, {'object1': 'cellphone', 'relation': 'to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is admiring with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'admiring'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 smiles slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'slightly'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turns around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'turning around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are hugging each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling with looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is clenching his fist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'clench', 'object2': 'fist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is clenching his fist while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'Hun', 'relation': 'clench', 'object2': 'fist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears sleeveless.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'wear', 'object2': 'sleeveless'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking to Heeran with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'smiling'}, {'object1': 'Hun', 'relation': 'talk to', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is asking someone for a favor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'ask to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens the car door and gets off from his car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}, {'object1': 'Dokyung', 'relation': 'get off', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens the car door and gets off from his car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}, {'object1': 'Dokyung', 'relation': 'get off', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: 'VOLV' is written on the blue installation.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'letter', 'attribute': 'VOLV'}, {'object': 'installation', 'attribute': 'blue'}, {'object1': 'letter', 'relation': 'written on', 'object2': 'installation'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: 'VOLV' is written in white.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'letter', 'attribute': 'VOLV'}, {'object1': 'letter', 'relation': 'written in', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There are people standing at the crosswalk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'stand at', 'object2': 'crosswalk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung turns back to move.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'turning back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Two people next to Haeyoung1 are walking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object': 'people', 'attribute': 'walking forward'}, {'object1': 'people', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 walks the road slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'walk', 'attribute': 'slowly'}, {'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is rolling her eyes thinking alone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'thinking'}, {'object1': 'Haeyoung1', 'relation': 'roll', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is looking up into the high school graduation album for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'album', 'attribute': 'high school graduation'}, {'object1': 'Heeran', 'relation': 'look into', 'object2': 'album'}, {'object1': 'Heeran', 'relation': 'look up', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking on the phone with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is wearing striped clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'clothes', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 asks Heeran to take a picture and send the picture to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ask', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'surprised'}, {'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is getting angry at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'get angry at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears a green blouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'green'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'blouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking back in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking back'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung starts to drive.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'start driving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are looking at the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'look at', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is putting his hand in the pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'put', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'in', 'object2': 'pocket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is scolding Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'scold', 'object2': 'Jinsang'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Heeran are looking at a person. The person is angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'angry'}, {'object1': 'Haeyoung1, Heeran', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is being pushed by two people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object1': 'people', 'relation': 'push', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'yelling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is sitting on the chair. Anna and Hun are in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Hun, Anna', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun closes a laptop and is leaving sofa in a hurry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'close', 'object2': 'laptop'}, {'object1': 'Hun', 'relation': 'leave', 'object2': 'sofa'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung comes in. Anna talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'coming in'}, {'object1': 'Anna', 'relation': 'talk with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung comes in. Anna talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'coming in'}, {'object1': 'Anna', 'relation': 'talk with', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing behind Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}, {'object1': 'Haeyoung2', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is pouring the sauce to the bowl.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'sauce', 'relation': 'to', 'object2': 'bowl'}, {'object1': 'Haeyoung2', 'relation': 'pour', 'object2': 'sauce'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is eating salad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'eat', 'object2': 'salad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding on a fork.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold on', 'object2': 'fork'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding on a fork.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold on', 'object2': 'fork'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting in front of the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in front of', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting in front of the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in front of', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is eating food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'eat', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is chewing food in her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'chew', 'object2': 'food'}, {'object1': 'food', 'relation': 'in', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack points at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'point at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack and Dokyung are sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung asks Soontack to continue.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'ask to', 'object2': 'Soontack'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Soontack are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'face', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is reaching out his hand while looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'looking ahead'}, {'object1': 'Soontack', 'relation': 'reach out', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'listening'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack classifies Dokyung as a special case.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'classify', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is talking and the brown shelf is in the background.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'talking'}, {'object1': 'book shelf', 'relation': 'behind', 'object2': 'Soontack'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is visualizing his visions of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'visualizing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is in a daze.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'daze'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person puts red chili in a pot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'chili', 'attribute': 'red'}, {'object1': 'person', 'relation': 'put', 'object2': 'chili'}, {'object1': 'chili', 'relation': 'in', 'object2': 'pot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with holding food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with holding food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is behind the desk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'behind', 'object2': 'desk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's mouth is closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a book.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'book'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting down in front of a sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting down'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'sofa'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is listening to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'listen to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is eating food in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'eat', 'object2': 'food'}, {'object1': 'Deogi', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is eating food in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'eat', 'object2': 'food'}, {'object1': 'Deogi', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is eating food in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'eat', 'object2': 'food'}, {'object1': 'Deogi', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a blanket. Haeyoung1 is in a daze.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'in a daze'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'blanket'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is walking with an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'angry'}, {'object': 'Deogi', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is laughing at the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'laughing'}, {'object1': 'Jeongsuk', 'relation': 'at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is touching her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'have', 'object2': 'head'}, {'object1': 'Jeongsuk', 'relation': 'touch', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is raising her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is raising her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is clutching at her collar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'clutch at', 'object2': 'collar'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Kyungsu are crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'crying'}, {'object': 'Kyungsu', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi sobs sadly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'sobbing'}, {'object': 'sobbing', 'attribute': 'sadly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu and Deogi are sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'sit on', 'object2': 'floor'}, {'object1': 'Deogi', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu and Deogi are sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'sit on', 'object2': 'floor'}, {'object1': 'Deogi', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi hits her chest while crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'crying'}, {'object1': 'Deogi', 'relation': 'hit', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi hits her chest while crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'crying'}, {'object1': 'Deogi', 'relation': 'hit', 'object2': 'chest'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turns back while sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'turning back'}, {'object': 'Haeyoung1', 'attribute': 'sitting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turns back while sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'turning back'}, {'object': 'Haeyoung1', 'attribute': 'sitting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a blue blouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'blouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi bites her lip.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'bite', 'object2': 'lip'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is massaging Haeyoung1's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'Sukyung', 'relation': 'massage', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is massaging Haeyoung1's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'Sukyung', 'relation': 'massage', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin glanced people over the partition.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'over', 'object2': 'partition'}, {'object1': 'Sungjin', 'relation': 'glance', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yawning while making coffee.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'yawning'}, {'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'coffee'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Seeing Haeyoung1 yawned, Sungjin told her mouth might be ripped.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'yawn', 'attribute': 'Seeing'}, {'object1': 'Sungjin', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Seeing Haeyoung1 yawned, Sungjin told her mouth might be ripped.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'yawn', 'attribute': 'Seeing'}, {'object1': 'Sungjin', 'relation': 'tell', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a black sweater.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sweater', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'sweater'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is putting his glasses on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'put on', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is putting his glasses on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'put on', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is throwing a pillow to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'throw', 'object2': 'pillow'}, {'object1': 'pillow', 'relation': 'to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is throwing a pillow to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'throw', 'object2': 'pillow'}, {'object1': 'pillow', 'relation': 'to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is sitting on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'sit on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a yellow shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'yellow'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is raising his voice with his eyes wide open to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Hun', 'relation': 'raise', 'object2': 'voice'}, {'object1': 'Hun', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is arguing with Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'argue with', 'object2': 'Hun'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is stopping Haeyoung1 from drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'stop', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'drink', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is stopping Haeyoung1 from drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'stop', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'drink', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is moving her hand with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}, {'object1': 'Haeyoung2', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is waving her hands on the stage.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'on', 'object2': 'stage'}, {'object1': 'Haeyoung2', 'relation': 'wave', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is putting her hand on the glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'put', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'on', 'object2': 'glass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is putting her hand on the glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'put', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'on', 'object2': 'glass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is emptying her glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'empty', 'object2': 'glass'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling with holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is throwing her cell phone after hanging up the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'throw', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her face with her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'face', 'relation': 'with', 'object2': 'hands'}, {'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are standing around Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'standing'}, {'object1': 'people', 'relation': 'around', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at his cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is closing the car door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Jiya', 'relation': 'close', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a hat on her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}, {'object1': 'hat', 'relation': 'on', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is standing on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'stand on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is running on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'run on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is running on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'run on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are running on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'run on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is running away from Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'running away'}, {'object1': 'Jiya', 'relation': 'from', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is running away from Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'running away'}, {'object1': 'Jiya', 'relation': 'from', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is yelling at someone in front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'yell at', 'object2': 'someone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on the chair lowering his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Dokyung', 'relation': 'lower', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: When Dokyung keeps his arms crossed, his phone is ringing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'ringing'}, {'object1': 'Dokyung', 'relation': 'cross', 'object2': 'amrs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'name', 'attribute': 'Haeyoung1'}, {'object': 'screen', 'attribute': 'phone'}, {'object1': 'name', 'relation': 'appear', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The name of Haeyoung1 appears on the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'name', 'attribute': 'Haeyoung1'}, {'object': 'screen', 'attribute': 'phone'}, {'object1': 'name', 'relation': 'appear', 'object2': 'screen'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is struggling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'struggling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lie on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is in shockingly surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'surprised'}, {'object': 'surprised', 'attribute': 'shocking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran ran up the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'run up', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is floundering on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'flounder on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is bleeding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'bleeding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is moving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Hun', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lie on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is trying to run away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'running away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'on', 'object2': 'floor'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is leaning his chin against her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'have', 'object2': 'chin'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'hand'}, {'object1': 'chin', 'relation': 'lean against', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is making a signal.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'make', 'object2': 'signal'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is trying to make Sukyung quiet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'make', 'attribute': 'quiet'}, {'object1': 'Jinsang', 'relation': 'make', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is touching his lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'have', 'object2': 'lips'}, {'object1': 'Jinsang', 'relation': 'touch', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung gazes at the phone when the phone is ringing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'ringing'}, {'object1': 'Dokyung', 'relation': 'gaze at', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung takes the call and talks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'take', 'object2': 'call'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding his cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone smiling and covering her mouth with her bandaged hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'hand', 'attribute': 'bandaged'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone smiling and covering her mouth with her bandaged hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'hand', 'attribute': 'bandaged'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing up from the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand up from', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaving Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'road'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is at the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is at the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is breathing roughly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'breathing'}, {'object': 'breathing', 'attribute': 'roughly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is breathing roughly and drinking alcohol.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'breathing'}, {'object': 'breathing', 'attribute': 'roughly'}, {'object1': 'Dokyung', 'relation': 'drink', 'object2': 'alcohol'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting at the bar. Dokyung touches his forhead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'bar'}, {'object1': 'Dokyung', 'relation': 'touch', 'object2': 'forehead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting at the bar. Dokyung touches his forhead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'bar'}, {'object1': 'Dokyung', 'relation': 'touch', 'object2': 'forehead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is touching his forehead with his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'touch', 'object2': 'forehead'}, {'object1': 'forehead', 'relation': 'with', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is yelling in the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'yelling'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are at the bar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'bar'}, {'object1': 'Dokyung', 'relation': 'at', 'object2': 'bar'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi takes the blanket out of the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'blanket', 'relation': 'out of', 'object2': 'closet'}, {'object1': 'Deogi', 'relation': 'take', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi takes the blanket out of the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'blanket', 'relation': 'out of', 'object2': 'closet'}, {'object1': 'Deogi', 'relation': 'take', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi walks out of the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'walk out of', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi walks out of the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'walk out of', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi comes outside with a blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'coming outside'}, {'object1': 'Deogi', 'relation': 'with', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi comes outside with a blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'coming outside'}, {'object1': 'Deogi', 'relation': 'with', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is doing laundry in the yard.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'do', 'object2': 'laundry'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'yard'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi throws the blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'throw', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi throws the blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'throw', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 glares at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'glare at', 'object2': 'someone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is grabbing Dokyung by the collar.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'grab', 'attribute': 'by collar'}, {'object1': 'Taejin', 'relation': 'grab', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding Taejin's arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Taejin'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running to Dokyung and Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'run to', 'object2': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'run to', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is holding his tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'hold', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is touching Dokyung's face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has an injury on his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'injury', 'relation': 'on', 'object2': 'face'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'injury'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing by Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand by', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is pointing at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'point at', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a green blouse. Sukyung wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'green'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'blouse'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closes her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is touching her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'touch', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding her hands. Haeyoung1 close her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears glasses and pink shirt. Sungjin look at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Sungjin', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person touches the forehead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'touch', 'object2': 'forehead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 raises her hand in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'office'}, {'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin's hair is black. Sungjin wears yellow glasses and piknk shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'yellow'}, {'object': 'shirt', 'attribute': 'pink'}, {'object': 'hair', 'attribute': 'black'}, {'object1': 'Sungjin', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is showing something inside his socks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'something', 'relation': 'inside', 'object2': 'socks'}, {'object1': 'Jinsang', 'relation': 'show', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is showing something inside his socks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'something', 'relation': 'inside', 'object2': 'socks'}, {'object1': 'Jinsang', 'relation': 'show', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone with a frown face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'frown'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is apologizing to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'apologize to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Sukyung and is sitting next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'next to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Sukyung and is sitting next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'next to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is appeasing Sukyung. Sukyung is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'crying'}, {'object1': 'Jinsang', 'relation': 'appease', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is shaking off someone's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'someone'}, {'object1': 'Sukyung', 'relation': 'shake off', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is backing off.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'backing off'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is kicking in the hospital.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'kicking'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'hospital'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is complaining.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'complaining'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya has rolled pieces of paper. Jiya walks to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'paper', 'attribute': 'piece of'}, {'object': 'paper', 'attribute': 'rolled'}, {'object1': 'Jiya', 'relation': 'roll', 'object2': 'paper'}, {'object1': 'Jiya', 'relation': 'walk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya has rolled pieces of paper. Jiya walks to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'paper', 'attribute': 'piece of'}, {'object': 'paper', 'attribute': 'rolled'}, {'object1': 'Jiya', 'relation': 'roll', 'object2': 'paper'}, {'object1': 'Jiya', 'relation': 'walk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a light stand near Jiya. Jiya talks to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'light stand', 'relation': 'near', 'object2': 'Jiya'}, {'object1': 'Jiya', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a light stand near Jiya. Jiya talks to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'light stand', 'relation': 'near', 'object2': 'Jiya'}, {'object1': 'Jiya', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a hat. Jiya talks to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}, {'object1': 'Jiya', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a hat. Jiya is whining to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}, {'object1': 'Jiya', 'relation': 'whine to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya has put her hand on her chest. Jiya is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'talking'}, {'object1': 'hand', 'relation': 'on', 'object2': 'chest'}, {'object1': 'Jiya', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is frowning at the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'frown at', 'object2': 'man'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding her phone and raises her head at surprise with her eyes wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi stands still right in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'standing'}, {'object1': 'Deogi', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi scolds Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'scold', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Haeyoung1 is sitting on the floor next to her bed, Deogi is talking to Haeyoung1 while standing in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'floor'}, {'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Deogi', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is standing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a pink shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sighing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'sighing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang closed the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'close', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang closed the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'close', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing in front of the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is dressed quickly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dressed', 'attribute': 'quickly'}, {'object': 'person', 'attribute': 'dressed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears his clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears his clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking to another person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person1', 'relation': 'talk to', 'object2': 'person2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is leaning against the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lean against', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is kicking the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'kick', 'object2': 'door'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is pounding the table loudly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'pound', 'attribute': 'loudly'}, {'object1': 'Dokyung', 'relation': 'pound', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks sad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a pair of shoes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoes', 'attribute': 'pair'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'shoes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts the shoes down on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shoes', 'relation': 'on', 'object2': 'floor'}, {'object1': 'Dokyung', 'relation': 'put down', 'object2': 'shoes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung closes the folder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'close', 'object2': 'folder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a necklace and glasses. Sukyung wears green clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears an earring and glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'earring'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks downside.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look', 'object2': 'downside'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a folder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'folder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the chair. Haeyoung1 is in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the chair. Haeyoung1 is in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking down. Sukyung wears green clothes, glasses, necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'green'}, {'object': 'Sukyung', 'attribute': 'looking down'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 picks up the folder from the desk and bows to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'pick up', 'object2': 'folder'}, {'object1': 'Haeyoung1', 'relation': 'bow to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 picks up the folder from the desk and bows to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'pick up', 'object2': 'folder'}, {'object1': 'Haeyoung1', 'relation': 'bow to', 'object2': 'Sukyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating uncooked ramen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'ramen', 'attribute': 'uncooked'}, {'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'ramen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is drinking coffee with using straw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'drink', 'object2': 'coffee'}, {'object1': 'coffee', 'relation': 'with', 'object2': 'straw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is drinking coffee with using straw.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'drink', 'object2': 'coffee'}, {'object1': 'coffee', 'relation': 'with', 'object2': 'straw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the cup with his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'cup'}, {'object1': 'cup', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the cup with his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'cup'}, {'object1': 'cup', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is sitting in front of the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'sitting'}, {'object1': 'Heeran', 'relation': 'in front of', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is sitting in front of the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'sitting'}, {'object1': 'Heeran', 'relation': 'in front of', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears a white hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears a white hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking down and taking off glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking down'}, {'object1': 'Jinsang', 'relation': 'take off', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Dokyung are sitting in the living room. Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit in', 'object2': 'living room'}, {'object1': 'Jinsang', 'relation': 'sit in', 'object2': 'living room'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are talking in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is throwing the bottles.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'throw', 'object2': 'bottles'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is catching a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'catch', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking while holding a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Gitae', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking while holding a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Gitae', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Yijoon is drinking tea.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Yijoon', 'relation': 'drink', 'object2': 'tea'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is opening a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'open', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears headphones around his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'neck', 'relation': 'around', 'object2': 'headphones'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting near the tree.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'near', 'object2': 'tree'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with squatting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object': 'Hun', 'attribute': 'squatting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with squatting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object': 'Hun', 'attribute': 'squatting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking with moving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Gitae', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is handing over the walkie-talkie to Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is handing over the walkie-talkie to Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking on the walkie-talkie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is holding the microphone. Dokyung is holding the walkie-talkie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is looking at the left side. Sangseok wears headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'left'}, {'object1': 'Sangseok', 'relation': 'look at', 'object2': 'side'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is talking with holding a walkie-talkie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is opening her eyes widely.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Jeongsuk', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is moving her hand while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'talking'}, {'object1': 'Jeongsuk', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi keeps her mouth close.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking at a person in front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'in front of', 'object2': 'person'}, {'object1': 'Jeongsuk', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'standing'}, {'object1': 'Deogi', 'relation': 'in', 'object2': 'kitchen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk looked back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is moving her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'move', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is talking by herself.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is turning back his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is sitting at the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk', 'relation': 'sit at', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is walking slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'walking'}, {'object': 'walking', 'attribute': 'slowly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 looks confident.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'confident'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is running.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is running.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opened the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung put down the cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put down', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with her eyes blinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'blinking'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking aside.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is closing his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sticks out her tongue slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tongue', 'attribute': 'slightly'}, {'object1': 'Haeyoung1', 'relation': 'stick out', 'object2': 'tongue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is touching a music box.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'touch', 'object2': 'music box'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is happy.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her mouth wide.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun looks confused.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'confused'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with putting his hand on his cheek.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'hand', 'relation': 'on', 'object2': 'cheek'}, {'object1': 'Hun', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang keeps his mouth open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'open'}, {'object1': 'Jinsang', 'relation': 'keep', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun has brown hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Hun', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking shocked.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'shocked'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at a glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'glass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Guests are sharing toast.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Guests', 'relation': 'share', 'object2': 'toast'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting next to a woman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'woman'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is back from bathroom while other guests are having a drink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'back from', 'object2': 'bathroom'}, {'object1': 'guests', 'relation': 'have', 'object2': 'drink'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is back from bathroom while other guests are having a drink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'back from', 'object2': 'bathroom'}, {'object1': 'guests', 'relation': 'have', 'object2': 'drink'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is coming dragging a baseball bat to the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'drag', 'object2': 'baseball bat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding a baseball bat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'bat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: When Sukyung is about to put her bat on the table Gitae is having a drink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'put', 'object2': 'bat'}, {'object1': 'Gitae', 'relation': 'have', 'object2': 'drink'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a traditional Korean outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'traditional Korean'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'outfit'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking with Haeyoung1. Haeyoung1 is leaning against the cabinet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'talk with', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'cabinet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking with Haeyoung1. Haeyoung1 is leaning against the cabinet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'talk with', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'cabinet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking with Haeyoung1. Haeyoung1 is leaning against the cabinet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'talk with', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'cabinet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a black strap. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'strap', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'strap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin and two women look at Haeyoung1. The black cup is on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'women', 'attribute': 'two'}, {'object': 'cup', 'attribute': 'black'}, {'object1': 'cup', 'relation': 'on', 'object2': 'table'}, {'object1': 'Sungjin', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'women', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a coffee machine behind Haeyoung1. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'coffee machine', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a coffee machine behind Haeyoung1. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'coffee machine', 'relation': 'behind', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a yellow shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'yellow'}, {'object1': 'Sungjin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pondering.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'pondering'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has tied the towel around his waist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'towel', 'relation': 'around', 'object2': 'waist'}, {'object1': 'Dokyung', 'relation': 'tie', 'object2': 'towel'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair with holding her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair with holding her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is located in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'locate in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the message on her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'message', 'relation': 'on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'message'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears earphones while sitting on the grass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'grass'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'earphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears earphones with her eyes closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'earphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There are shoes on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shoes', 'relation': 'on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There are shoes on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shoes', 'relation': 'on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears earphones with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'earphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is entering a door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'enter', 'object2': 'door'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is answering with a high voice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'voice', 'attribute': 'high'}, {'object1': 'Haeyoung1', 'relation': 'answer with', 'object2': 'voice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is answering with a high voice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'voice', 'attribute': 'high'}, {'object1': 'Haeyoung1', 'relation': 'answer with', 'object2': 'voice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is being dragged by Sangseok and Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok and Gitae', 'relation': 'drag', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking in the hallway.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'walking'}, {'object1': 'people', 'relation': 'in', 'object2': 'hallway'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with Sangseok and Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk with', 'object2': 'Sangseok'}, {'object1': 'Haeyoung1', 'relation': 'walk with', 'object2': 'Gitae'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is covering his face with the towel.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'cover', 'object2': 'face'}, {'object1': 'face', 'relation': 'with', 'object2': 'towels'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is angry at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is angry at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'person', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is speaking loudly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'speaking'}, {'object': 'speaking', 'attribute': 'loudly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is sitting next to Sukyung. Jinsang is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sitting'}, {'object1': 'Jinsang', 'relation': 'next to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking with tangled hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'hair', 'attribute': 'tangled'}, {'object1': 'Sukyung', 'relation': 'with', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at someone with strange eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'strange'}, {'object1': 'Jinsang', 'relation': 'look', 'object2': 'somewhere'}, {'object1': 'somewhere', 'relation': 'with', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking next to Jinsang. Jinsang cover his eyes with hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'next to', 'object2': 'Jinsang'}, {'object1': 'Jinsang', 'relation': 'cover', 'object2': 'eyes'}, {'object1': 'eyes', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Two people are holding red light stick.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object': 'light stick', 'attribute': 'red'}, {'object1': 'people', 'relation': 'hold', 'object2': 'light stick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is getting off the bus and talks to two people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object1': 'Sukyung', 'relation': 'get off', 'object2': 'bus'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is getting off the bus and talks to two people..<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'two'}, {'object1': 'Sukyung', 'relation': 'get off', 'object2': 'bus'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is standing in front of two people with holding light sticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'standing'}, {'object': 'people', 'attribute': 'two'}, {'object': 'light sticks', 'attribute': 'red'}, {'object1': 'people', 'relation': 'hold', 'object2': 'light sticks'}, {'object1': 'Sukyung', 'relation': 'in front of', 'object2': 'people'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is standing up with talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'standing up'}, {'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is yelling at Jiya.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'yell at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is yelling at Jiya.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'yell at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is yelling at Jiya.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'yell at', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is angry with teary eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'angry'}, {'object': 'eyes', 'attribute': 'teary'}, {'object1': 'Sukyung', 'relation': 'with', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya and Sukyung are facing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'face', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is shaking Sukyung's face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'Sukyung'}, {'object1': 'Jiya', 'relation': 'shake', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is scrubbing Sukyung's face with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'Sukyung'}, {'object1': 'face', 'relation': 'with', 'object2': 'hand'}, {'object1': 'Jiya', 'relation': 'scrub', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is asking a question to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'ask to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is listening to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'listen to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing on a street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'stand on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is staring at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'stare at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Seohee is wearing a wedding dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Seohee', 'relation': 'wear', 'object2': 'wedding dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Seohee is throwing the bouquet, the guests are standing on the stage watching the bouquet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Seohee', 'relation': 'throw', 'object2': 'bouquet'}, {'object1': 'guests', 'relation': 'watch', 'object2': 'bouquet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is putting his hand up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put up', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 jumps up to catch the bouquet wearing high heels.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'catch', 'object2': 'bouquet'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'high heels'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk, Deogi, Kyungsu, and other guests are watching Haeyoung1 who is catching the bouquet sitting at the round table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jeongsuk, Deogi, Kyungsu', 'relation': 'watch', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'catch', 'object2': 'bouquet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is wearing a pink tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tie', 'attribute': 'pink'}, {'object1': 'person', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding up the bouquet with her eyes and mouth wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bouquet'}, {'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing red clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring at Hun and Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stare at', 'object2': 'Hun'}, {'object1': 'Haeyoung1', 'relation': 'stare at', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding up Anna in his arms with his eyes wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Hun', 'relation': 'hold', 'object2': 'Anna'}, {'object1': 'Hun', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is jumping down from his arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arms', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'jump down from', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is stroking his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'stroke', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'Anna'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is leaning on the table. Anna wears a green vest and a red skirt. A yellow basket is near Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'vest', 'attribute': 'green'}, {'object': 'skirt', 'attribute': 'red'}, {'object': 'basket', 'attribute': 'yellow'}, {'object1': 'Anna', 'relation': 'lean on', 'object2': 'table'}, {'object1': 'Anna', 'relation': 'wear', 'object2': 'vest'}, {'object1': 'Anna', 'relation': 'wear', 'object2': 'skirt'}, {'object1': 'Anna', 'relation': 'near', 'object2': 'basket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is making a kissing gesture.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'gesture', 'attribute': 'kiss'}, {'object1': 'Anna', 'relation': 'make', 'object2': 'gesture'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna gives a wink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'give', 'object2': 'wink'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is touching her bangs. A bruise is above eyebrows.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'bangs'}, {'object1': 'bruise', 'relation': 'above', 'object2': 'eyebrow'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown. A bruise is above eyebrows.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}, {'object1': 'bruise', 'relation': 'above', 'object2': 'eyebrow'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung opened the door and got out of the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'open', 'object2': 'door'}, {'object1': 'Sukyung', 'relation': 'get out of', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding her jacket. Sukyung is wearing her jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'jacket'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears glasses. Sukyung is walking and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'walking'}, {'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is spacing out. Woman is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'spacing out'}, {'object1': 'woman', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is looking at Haeyoung1. Companies are looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'companies', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at Sukyung and Jinsang while holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'Sukyung'}, {'object1': 'Hun', 'relation': 'look at', 'object2': 'Jinsang'}, {'object1': 'Hun', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is making a drinking gesture with his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'gesture', 'attribute': 'drinking'}, {'object1': 'Jinsang', 'relation': 'make', 'object2': 'gesture'}, {'object1': 'gesture', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is throwing a spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'throw', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is grabbing a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'grab', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is shaking his head side to side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'side to side'}, {'object1': 'Jinsang', 'relation': 'shake', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is opening his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is moving his hands a lot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'move', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Heeran. Heeran is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran's hair is bobbed hair. Heeran is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'bobbed'}, {'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Heeran. Haeyoung1 is talking with Heeran.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Heeran'}, {'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking with Haeyoung1. Haeyoung1 is drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drink', 'object2': 'beer'}, {'object1': 'Heeran', 'relation': 'talk with', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking with Haeyoung1. Haeyoung1 is drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drink', 'object2': 'beer'}, {'object1': 'Heeran', 'relation': 'talk with', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking on the phone. Heeran is walking with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Heeran', 'relation': 'walk with', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking on the phone. Heeran is walking with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Heeran', 'relation': 'walk with', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking on the phone. Heeran is walking with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Heeran', 'relation': 'walk with', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is gazing at Jinsang while holding his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'neck', 'attribute': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'gaze at', 'object2': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Sukyung while gazing at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung gets her hands off from his neck after Jinsang talks to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'get off', 'object2': 'hands'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung looks at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Sukyung is leaning on the fence closing her eyes, Jinsang is about to kiss Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'lean on', 'object2': 'fence'}, {'object1': 'Jinsang', 'relation': 'kiss', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a blue outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'outfit', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is about to kiss Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'kiss', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is leaning her back on the fence while Jinsang is about to kiss Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'lean on', 'object2': 'fence'}, {'object1': 'Jinsang', 'relation': 'kiss', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears brown clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'brown'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is smiling brightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'brightly'}, {'object': 'Jiya', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung has a despised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'despised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a black skirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'skirt', 'attribute': 'black'}, {'object1': 'Jiya', 'relation': 'wear', 'object2': 'skirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is grabbing her neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'grab', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on the bench.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is holding a bottle of water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bottle', 'relation': 'of', 'object2': 'water'}, {'object1': 'Jiya', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'turning back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is drinking water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'drink', 'object2': 'water'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a happy face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1 from the back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'sit next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with wearing high heels.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk with', 'object2': 'high heels'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with wearing high heels.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk with', 'object2': 'high heels'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talked to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is trying to get Haeyoung1 out of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'out of', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'get', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running after biting Dokyung's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'Dokyung'}, {'object': 'Haeyoung1', 'attribute': 'running'}, {'object1': 'Haeyoung1', 'relation': 'bite', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is helping someone to walk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'help', 'object2': 'someone'}, {'object1': 'someone', 'relation': 'to', 'object2': 'walk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is putting her arm on Dokyung's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Dokyung'}, {'object1': 'arm', 'relation': 'on', 'object2': 'shoulder'}, {'object1': 'person', 'relation': 'put', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening the car door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is pushing Haeyoung1 into the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'push', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'into', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a seat belt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'seat belt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There are cars on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'cars', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a seat belt in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'seat belt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pointing the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'point', 'object2': 'front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pointing the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'point', 'object2': 'front'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is slicing the meat into smaller pieces.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'slice', 'object2': 'meat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is telling that it is her first time to be picked up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'telling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ask', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lifting the card.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lift', 'object2': 'card'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lifting the card.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lift', 'object2': 'card'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears the white blouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'blouse'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wiped the blood on Haeyoung1's face. Dokyung is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object': 'face', 'attribute': 'Haeyoung1'}, {'object1': 'Heeran', 'relation': 'wipe', 'object2': 'blood'}, {'object1': 'blood', 'relation': 'on', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wiped the blood on Haeyoung1's face. Dokyung is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object': 'face', 'attribute': 'Haeyoung1'}, {'object1': 'Heeran', 'relation': 'wipe', 'object2': 'blood'}, {'object1': 'blood', 'relation': 'on', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking. Haeyoung1 holds a tissue.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'tissue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran put her hand on Haeyoung1's shoulder. Heeran is talking. Haeyoung1 holds a tissue.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'hand', 'relation': 'on', 'object2': 'shoulder'}, {'object1': 'Heeran', 'relation': 'put', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'tissue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran put her hand on Haeyoung1's shoulder. Heeran is talking. Haeyoung1 holds a tissue.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'hand', 'relation': 'on', 'object2': 'shoulder'}, {'object1': 'Heeran', 'relation': 'put', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'tissue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran put her hand on Haeyoung1's shoulder. Heeran is talking. Haeyoung1 holds a tissue.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'hand', 'relation': 'on', 'object2': 'shoulder'}, {'object1': 'Heeran', 'relation': 'put', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'tissue'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran's hairstyle is bobbed hair. Heeran is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object': 'hairstyle', 'attribute': 'bobbed'}, {'object1': 'Heeran', 'relation': 'have', 'object2': 'hairstyle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing next to Heeran. Haeyoung1 and Heeran look at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Heeran'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Heeran', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks scared. Haeyoung1 looks at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'scared'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran bit her lips. Heeran looks down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'looking down'}, {'object1': 'Heeran', 'relation': 'bite', 'object2': 'lips'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung uncrosses his arms and puts his hand on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'on', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'uncross', 'object2': 'arms'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung uncrosses his arms and puts his hand on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'on', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'uncross', 'object2': 'arms'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Someone's finger taps twice on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'finger', 'attribute': 'someone'}, {'object': 'tab', 'attribute': 'twice'}, {'object1': 'finger', 'relation': 'tap on', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack nods his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Soontack', 'relation': 'nod', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack and Dokyung are facing each other in silence.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'in silence'}, {'object1': 'Soontack', 'relation': 'face', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'face', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung asks the person a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'ask', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack frowns his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'frown'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack frowns his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'frown'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks deep in thought.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'thinking', 'attribute': 'deeply'}, {'object': 'Dokyung', 'attribute': 'thinking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks startled.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'startled'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is throwing herself against the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hit', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is pushed by the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'pushed by', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is opening his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung comes into the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'come to', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung jumped to the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'jump to', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung jumped to the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'jump to', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is running away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'running away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is jumping out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'jump out of', 'object2': 'house'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran's hair is short.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'short'}, {'object1': 'Heeran', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears earphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is adjusting his hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'adjust', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is getting on the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'get on', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing behind the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'stand behind', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae wears a red hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'red'}, {'object1': 'Gitae', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae wears a red hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'red'}, {'object1': 'Gitae', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a seat belt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'seat belt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 tells someone that Haeyoung1 has to go out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tell', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 tells someone that Haeyoung1 has to go out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tell', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi stares at someone with a baffled face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'baffled'}, {'object1': 'Deogi', 'relation': 'stare at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks to Deogi and leaves.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'leaving'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi gets angry with someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi yells at someone angrily.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'yell at', 'attribute': 'angrily'}, {'object1': 'Deogi', 'relation': 'yell at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi yells at someone angrily.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'yell at', 'attribute': 'angrily'}, {'object1': 'Deogi', 'relation': 'yell at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu wears a blue gray T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'blue gray'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu wears a blue gray T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'blue gray'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is putting her head on her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'put', 'object2': 'head'}, {'object1': 'head', 'relation': 'on', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a hoodie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'hoodie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is holding beer on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'on', 'object2': 'bed'}, {'object1': 'Heeran', 'relation': 'hold', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'staring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is laughing while crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'laughing'}, {'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his face to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning against the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'bed'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung2 walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung2'}, {'object1': 'Haeyoung2', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'smile at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'smile at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung avoids looking into a person's eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'person'}, {'object1': 'Dokyung', 'relation': 'avoid', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 says that none of the acting worked on Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing red clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a sky blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'sky blue'}, {'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking back slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing an apron.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wear', 'object2': 'apron'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking with looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking back'}, {'object': 'Deogi', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is looking back with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'surprised'}, {'object': 'Jeongsuk', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jeongsuk is sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jeongsuk', 'attribute': 'sitting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a sky blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'sky blue'}, {'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is turning away his face from the grinder wearing headphones while Gitae is putting a tissue into his nose wearing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'turning away'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'headphones'}, {'object1': 'Gitae', 'relation': 'put', 'object2': 'tissue'}, {'object1': 'tissue', 'relation': 'into', 'object2': 'nose'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'sitting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While a person is keep flipping the fried food, Dokyung is recording the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'record', 'object2': 'sound'}, {'object1': 'person', 'relation': 'flip', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While a person is keep flipping the fried food, Dokyung is recording the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'record', 'object2': 'sound'}, {'object1': 'person', 'relation': 'flip', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a big microphone wearing headphones in front of the person cooking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'microphone', 'attribute': 'big'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'microphone'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While steaming up from the cooking place, Dokyung keeps recording sound holding the microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'record', 'object2': 'sound'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is carrying a bag in the market.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'carry', 'object2': 'bag'}, {'object1': 'person', 'relation': 'in', 'object2': 'market'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung at the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Dokyung, Haeyoung1', 'relation': 'at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung. Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung with drunk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'drunk'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking at the bar. Dokyung is drinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'drinking'}, {'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Dokyung'}, {'object1': 'Dokyung, Haeyoung1', 'relation': 'at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking at the bar. Dokyung is drinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'drinking'}, {'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Dokyung'}, {'object1': 'Dokyung, Haeyoung1', 'relation': 'at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are talking at the bar. Dokyung is drinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'drinking'}, {'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'Dokyung'}, {'object1': 'Dokyung, Haeyoung1', 'relation': 'at', 'object2': 'bar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking and Dokyung is drinking water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'drink', 'object2': 'water'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing red clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening a piece of paper in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'paper', 'attribute': 'a piece of'}, {'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening a piece of paper in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'paper', 'attribute': 'a piece of'}, {'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'sit in', 'object2': 'bus'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking out of the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look out of', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking out of the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look out of', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting in the bus.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sitting'}, {'object1': 'Haeyoung2', 'relation': 'on', 'object2': 'bus'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is coming out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'come out of', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is walking with holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'walking'}, {'object1': 'Heeran', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is getting angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is opening her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran and Haeyoung1 are sitting at the dining table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'sit at', 'object2': 'dining table'}, {'object1': 'Haeyoung1', 'relation': 'sit at', 'object2': 'dining table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is listening to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'listen to', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is pouring liquid into a glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'pour', 'object2': 'liquid'}, {'object1': 'liquid', 'relation': 'in', 'object2': 'glass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is holding up his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Taejin', 'relation': 'hold up', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'look at', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has headphones on his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'headphones', 'relation': 'on', 'object2': 'neck'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok wears headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok wears headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is checking the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'check', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There are horses in the stadium.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'horses', 'relation': 'in', 'object2': 'stadium'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The horses are running.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'horses', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is watching a horse running game.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'watch', 'object2': 'horse running game'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok bowed to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'bow', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 slams open the door and rushes down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'slam', 'object2': 'door'}, {'object1': 'Haeyoung1', 'relation': 'rush down', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 slams open the door and rushes down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'slam', 'object2': 'door'}, {'object1': 'Haeyoung1', 'relation': 'rush down', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running with the lunch box.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'with', 'object2': 'lunch box'}, {'object1': 'Haeyoung1', 'relation': 'with', 'object2': 'lunch box'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running with the lunch box.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'with', 'object2': 'lunch box'}, {'object1': 'Haeyoung1', 'relation': 'with', 'object2': 'lunch box'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is trying to take the taxi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'take', 'object2': 'taxi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is closing the car door for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Kyungsu', 'relation': 'close', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is closing the car door for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'door', 'attribute': 'car'}, {'object1': 'Kyungsu', 'relation': 'close', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking back at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look back', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu and Deogi are talking to each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Kyungsu'}, {'object1': 'Kyungsu', 'relation': 'talk to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu and Deogi are talking to each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Kyungsu'}, {'object1': 'Kyungsu', 'relation': 'talk to', 'object2': 'Deogi'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding up her letter reading the letter to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'read', 'object2': 'letter'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'letter'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a paper.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 reads the letter, while Dokyung is gazing at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'read', 'object2': 'letter'}, {'object1': 'Dokyung', 'relation': 'gaze', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a paper.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung gets close to the letter.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'get close', 'object2': 'letter'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung sits right next to Haeyoung1 on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'couch'}, {'object1': 'Dokyung', 'relation': 'on', 'object2': 'couch'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to Taejin saying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'say', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is giving a speech.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is standing next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'standing'}, {'object1': 'Taejin', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is approaching Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'approach', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is putting his hand on Dokyung's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Dokyung'}, {'object1': 'Taejin', 'relation': 'put', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'on', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is wearing a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is leaving the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'leave', 'object2': 'office'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staying still.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'staying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is keeping quiet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'quiet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is feeling cold and leaving the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'cold'}, {'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 feels cold and walks. There is a light next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'cold'}, {'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'light', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is vaguely seen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'seen'}, {'object': 'seen', 'attribute': 'vaguely'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung leaves the office and drives his car. Haeyoung1 walks on street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'office'}, {'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung leaves the office and drives his car. Haeyoung1 walks on street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'office'}, {'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is following after Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'follow after', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is following after Haeyoung1. Dokyung's car is white. Dokyung is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'car', 'attribute': 'white'}, {'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Dokyung', 'relation': 'own', 'object2': 'car'}, {'object1': 'person', 'relation': 'follow after', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning her head to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is telling Jinsang that Sukyung is going to raise the baby alone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'tell', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung said Sukyung should know who baby's father is.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'sitting'}, {'object1': 'Sukyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Sukyung with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}, {'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a straw while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'straw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is closing her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran and Haeyoung1 are sitting facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object': 'Heeran', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to someone in front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'someone'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears white T-shirts.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirts', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is putting a straw to her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'straw', 'relation': 'to', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'straw'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has brown hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'has', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna approaches to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'approach to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is holding her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'hold', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun slowly moves his mobile phone down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'move', 'attribute': 'slowly'}, {'object1': 'Hun', 'relation': 'move down', 'object2': 'mobile phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna wants a person to stop taking pictures.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'stop taking pictures'}, {'object1': 'Anna', 'relation': 'want', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun does not know what to do.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'confused'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The phone is ringing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'ringing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a basket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'basket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi answers the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding yellow phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'yellow'}, {'object1': 'Deogi', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is at home answering the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'at', 'object2': 'home'}, {'object1': 'Deogi', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shedding tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sleeping.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sleeping'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sleeping.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sleeping'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closed her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying on her side of the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bed', 'attribute': 'side of'}, {'object1': 'Haeyoung1', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is searching the trash can.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'search', 'object2': 'trash can'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is scouring the medicine bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'scour', 'object2': 'medicine bag'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the car seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'car seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking someone in astonishment.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'astonished'}, {'object1': 'Jinsang', 'relation': 'ask', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking out of the window with a troubled look on her face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'troubled'}, {'object1': 'Sukyung', 'relation': 'look out of', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on the car seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'car seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tie', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is holding an ear pick.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'hold', 'object2': 'ear pick'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is cooking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'cooking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is cooking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'cooking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on a couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lie on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is answering the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lying on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lie on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is standing in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'stand in', 'object2': 'kitchen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is standing in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'stand in', 'object2': 'kitchen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is wearing a yellow shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'yellow'}, {'object1': 'Anna', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at planner.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'planner'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a red planner.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'planner', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'planner'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a memo on the planner.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'memo', 'relation': 'on', 'object2': 'planner'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The appointment is scheduled at 5 pm today.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'appointment', 'relation': 'schedule at', 'object2': 'five'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks on the phone and has sat at the dressing table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'sit at', 'object2': 'dressing table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks on the phone and has sat at the dressing table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'sit at', 'object2': 'dressing table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has taken off her glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'take off', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a bunch of flowers in the vase on the table. Haeyoung1 is in front of the mirror.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'flowers', 'attribute': 'a bunch of'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'mirror'}, {'object1': 'flowers', 'relation': 'in', 'object2': 'vase'}, {'object1': 'vase', 'relation': 'on', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is getting out of the toilet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'get out of', 'object2': 'toilet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the restroom.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'restroom'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking with her arms swinging.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'swing', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has age tag on the chest.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tag', 'attribute': 'age'}, {'object1': 'tag', 'relation': 'on', 'object2': 'chest'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'tag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking to the people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk to', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is laughing around the people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'laughing'}, {'object1': 'Haeyoung2', 'relation': 'around', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is calling someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'call', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is calling someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'call', 'object2': 'someone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Soontack is screaming while holding his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Soontack', 'attribute': 'screaming'}, {'object1': 'Soontack', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung fastened a seat belt in his car. Dokyung drives.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Dokyung', 'relation': 'fasten', 'object2': 'seat belt'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving his car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is coming out of the bathroom. Haeyoung1 faces with Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'come out of', 'object2': 'bathroom'}, {'object1': 'Haeyoung1', 'relation': 'face with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is coming out of the bathroom. Haeyoung1 faces with Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'come out of', 'object2': 'bathroom'}, {'object1': 'Haeyoung1', 'relation': 'face with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is coming out of the bathroom. Haeyoung1 faces with Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'come out of', 'object2': 'bathroom'}, {'object1': 'Haeyoung1', 'relation': 'face with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is naked and embarrassed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'naked'}, {'object': 'Dokyung', 'attribute': 'embarrassed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is naked and embarrassed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'naked'}, {'object': 'Dokyung', 'attribute': 'embarrassed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 bumped into each other in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'bump into', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'bump into', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'living room'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing in front of the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has bruises on his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bruise', 'relation': 'on', 'object2': 'face'}, {'object1': 'Jinsang', 'relation': 'have', 'object2': 'bruise'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is hanging a placard around his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'placard', 'relation': 'around', 'object2': 'neck'}, {'object1': 'Jinsang', 'relation': 'hang', 'object2': 'placard'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang was hit by a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'hit by', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is saying mom.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing with his arms tied.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object': 'arms', 'attribute': 'tied'}, {'object1': 'Jinsang', 'relation': 'with', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is dancing in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'dancing'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is dancing in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'dancing'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is drinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'drinking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at a food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is gazing at the cherry tomato that Sukyung is holding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'gaze', 'object2': 'cherry tomato'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'cherry tomato'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is just about to put the cherry tomato into his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'put', 'object2': 'cherry tomato'}, {'object1': 'cherry tomato', 'relation': 'in', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts the cherry tomato into his mouth, kisses on his cheek, and pinches his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'Jinsang'}, {'object': 'cheek', 'attribute': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'cherry tomato'}, {'object1': 'cherry tomato', 'relation': 'to', 'object2': 'mouth'}, {'object1': 'Sukyung', 'relation': 'kiss', 'object2': 'cheek'}, {'object1': 'Sukyung', 'relation': 'pinch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks anxious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'anxious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung kicks his head instead of the cherry tomato in his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'kick', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is running down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'run down', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is looking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'looking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is lowering his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is speaking in a hurry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'speaking'}, {'object1': 'speaking', 'relation': 'in', 'object2': 'hurry'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pulling a door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'pull', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is pulling a door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'pull', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 walked into the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk into', 'object2': 'room'}, {'object1': 'Dokyung', 'relation': 'walk into', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking. Dokyung is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking. Dokyung is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talks with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk with', 'object2': 'Haeyoung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talks with Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk with', 'object2': 'Haeyoung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lifting her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lift', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lifting her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lift', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is about to make a clap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'clap'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is drinking water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'drink', 'object2': 'water'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking close to Jiya.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'walk close', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking close to Jiya.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'walk close', 'object2': 'Jiya'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a bracelet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'bracelet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a bracelet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'bracelet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is standing up from the bench.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'standing up'}, {'object1': 'Jiya', 'relation': 'from', 'object2': 'bench'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is standing next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'standing'}, {'object1': 'Jiya', 'relation': 'next to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is driving while Dokyung looks confused.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'confused'}, {'object1': 'Gitae', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting in a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A car is coming in Dokyung's vision of his past.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'car', 'attribute': 'coming'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is facing the car in his vision.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'face', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens his mouth to see his vision with his eyes wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'mouth'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung opens his mouth to see his vision with his eyes wide open.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'wide'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'mouth'}, {'object1': 'Dokyung', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking right'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks annoyed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'annoyed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to Haeyoung1's words.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning her head to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing in a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing and Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts her arms around two people's shoulders.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'people'}, {'object': 'people', 'attribute': 'two'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'arms'}, {'object1': 'arms', 'relation': 'around', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts her arms around two people's shoulders.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'people'}, {'object': 'people', 'attribute': 'two'}, {'object1': 'Sukyung', 'relation': 'put', 'object2': 'arms'}, {'object1': 'arms', 'relation': 'around', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is preparing the juice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'prepare', 'object2': 'juice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is preparing the juice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'prepare', 'object2': 'juice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts orange juice down on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'juice', 'attribute': 'orange'}, {'object1': 'Sukyung', 'relation': 'put down', 'object2': 'juice'}, {'object1': 'juice', 'relation': 'on', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts orange juice down on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'juice', 'attribute': 'orange'}, {'object1': 'Sukyung', 'relation': 'put down', 'object2': 'juice'}, {'object1': 'juice', 'relation': 'on', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung puts orange juice down on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'juice', 'attribute': 'orange'}, {'object1': 'Sukyung', 'relation': 'put down', 'object2': 'juice'}, {'object1': 'juice', 'relation': 'on', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a black scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'black'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a black scarf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'scarf', 'attribute': 'black'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'scarf'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a cast. Sukyung talks to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'cast'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is standing in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'standing'}, {'object1': 'Sukyung', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding papers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hold', 'object2': 'papers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing behind Sukyung with wearing a cast. Sukyung is turning around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'turning around'}, {'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'behind', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'cast'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is raising her arm. Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'raise', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown. Haeyoung1 looks down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is rolling up the paper. Sukyung is talking and walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'walking'}, {'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'roll up', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is rolling up the paper. Sukyung is talking and walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'walking'}, {'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'roll up', 'object2': 'paper'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hit the person with the paper. Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'person', 'relation': 'with', 'object2': 'paper'}, {'object1': 'Sukyung', 'relation': 'hit', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is hitting people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hit', 'object2': 'people'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a watch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'watch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a watch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'watch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look down', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sits down on the ground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'ground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is scratching his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'scratch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking with holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace. Heeran is talking with holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'hold', 'object2': 'cellphone'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace. Heeran is talking with holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'hold', 'object2': 'cellphone'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 turns and touches her face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'turning'}, {'object1': 'Haeyoung2', 'relation': 'touch', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking near the fence.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'near', 'object2': 'fence'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's hair is brown. Dokyung is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Dokyung', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking near Dokyung. Heeran looks at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'near', 'object2': 'Dokyung'}, {'object1': 'Heeran', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walk with Heeran. Dokyung is looking at the yearbook.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk with', 'object2': 'Heeran'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'yearbook'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a white shirt. Dokyung is looking at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears light brown clothes. Dokyung is looking at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'light brown'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'something'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding fried chicken with a sad face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'sad'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'chicken'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is turning his head to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'front'}, {'object1': 'Hun', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'scared'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing red clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is eating after shedding tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'eating'}, {'object1': 'Sukyung', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is covering his face with the towel.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'cover', 'object2': 'face'}, {'object1': 'face', 'relation': 'with', 'object2': 'towels'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing and sitting down on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object': 'Haeyoung1', 'attribute': 'sitting down'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing and sitting down on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dancing'}, {'object': 'Haeyoung1', 'attribute': 'sitting down'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is touching the radio in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'radio'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is touching the radio in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'radio'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is spacing out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'spacing out'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the bed. Haeyoung1 is touching radio.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'bed'}, {'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'radio'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a blank face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'blank'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is in the car. Jinsang is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'driving'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is in the car. Jinsang is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'driving'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is eating a lollipop.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'eat', 'object2': 'lollipop'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 says that the place is where his father used to use as a studio.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung lifts his eyes up to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lift up', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang gets into the studio.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'get into', 'object2': 'studio'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing next to a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object1': 'Jinsang', 'relation': 'next to', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking, which is Dokyung's imagination.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'looking left'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is facing a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'face', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at Dokyung's back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'back', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung2', 'relation': 'look', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the left side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'left'}, {'object1': 'Haeyoung1', 'relation': 'look', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'turning back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'turning back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the left side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'left'}, {'object1': 'Dokyung', 'relation': 'look', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks sad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is walking in front of Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'walking'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding something in his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'something', 'relation': 'in', 'object2': 'mouth'}, {'object1': 'Hun', 'relation': 'hold', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking in front of Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Dokyung', 'relation': 'in front of', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his hands in his pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'in', 'object2': 'pocket'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking past people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk past', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is lowering his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is walking behind Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'walk behind', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking at the very front of a line.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'line', 'attribute': 'front'}, {'object1': 'Dokyung', 'relation': 'walk at', 'object2': 'line'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna feels sympathetic toward someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'sympathetic'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna hugs Hun and taps him on his shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'hug', 'object2': 'Hun'}, {'object1': 'Anna', 'relation': 'tap', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is comforting Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'comfort', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna kisses Hun on his cheek.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cheek', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'kiss on', 'object2': 'cheek'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are hugging each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is talking in the restaurant.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'talking'}, {'object1': 'person', 'relation': 'in', 'object2': 'restaurant'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is grabbing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'grab', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is grabbing headphones.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Gitae', 'relation': 'grab', 'object2': 'headphones'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the screen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is working with people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'work with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is working with people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'work with', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'walking'}, {'object1': 'people', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding on the flower bouquet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold on', 'object2': 'flower bouquet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding on the flower bouquet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold on', 'object2': 'flower bouquet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'walking'}, {'object1': 'people', 'relation': 'in', 'object2': 'building'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is greeting with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'greet with', 'object2': 'smile'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'building'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'building'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the lamp.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'lamp'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the lamp.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'lamp'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks happy while looking at the lamp.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'lamp'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying down in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'lying down'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a watch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'watch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding the handle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'handle'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin held Haeyoung1's wrist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'wrist', 'attribute': 'Haeyoung1'}, {'object1': 'Sungjin', 'relation': 'hold', 'object2': 'wrist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin nodded his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'nod', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dancing with holding a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'dance'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'microphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is moving her seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'move', 'object2': 'seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung tied her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'tie', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is touching her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'touch', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 holds a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is listening to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'listen to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing with wearing a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A woman is sitting on a sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'woman', 'relation': 'sit on', 'object2': 'sofa'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a woman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'woman'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking ahead with a sad expression.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sad'}, {'object': 'Haeyoung2', 'attribute': 'looking ahead'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking ahead while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking ahead'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is sitting on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'sit on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 keeps her mouth closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is tapping her fingers.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'tap', 'object2': 'fingers'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's lip is pink.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lip', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'lip'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turned her body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turned around in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'turning around'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is mad at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'mad at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'yell to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks so angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'yell at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is yelling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'yelling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'someone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is lowering his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a pink jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'pink'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Anna are coming out the gate.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'come out', 'object2': 'gate'}, {'object1': 'Anna', 'relation': 'come out', 'object2': 'gate'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is grabbing Hun's arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'Hun'}, {'object1': 'Anna', 'relation': 'grab', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has pink hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'pink'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is shaking hands with Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'with', 'object2': 'Haeyoung2'}, {'object1': 'Hun', 'relation': 'shake', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is saying thanks to Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'say to', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a person. The person talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}, {'object1': 'person', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a person. The person talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}, {'object1': 'person', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling at a person. The person talks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'smile at', 'object2': 'person'}, {'object1': 'person', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk with', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is acting kick motion. Haeyoung1 smiles.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'motion', 'attribute': 'kick'}, {'object1': 'Haeyoung1', 'relation': 'act', 'object2': 'motion'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is surprised at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person asks. Heeran is looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'asking'}, {'object': 'Heeran', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is laughing with people. A person holds a flower and walks to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'laugh with', 'object2': 'people'}, {'object1': 'person', 'relation': 'hold', 'object2': 'flower'}, {'object1': 'person', 'relation': 'walk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning her head to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}, {'object1': 'head', 'relation': 'to', 'object2': 'left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is turning her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is bending his back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'bend', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is grabbing the sand from the ground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'grab', 'object2': 'sand'}, {'object1': 'sand', 'relation': 'from', 'object2': 'ground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding the sand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'sand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun, Gitae, and Yijoon are walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Gitae', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Yijoon', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has brown hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae looks tired next to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'tired'}, {'object1': 'Gitae', 'relation': 'next to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking while looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears denim shirts.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'denim'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is serving a customer at the convenience store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'serve', 'object2': 'customer'}, {'object1': 'Anna', 'relation': 'at', 'object2': 'convenience store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is serving a customer at the convenience store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'serve', 'object2': 'customer'}, {'object1': 'Anna', 'relation': 'at', 'object2': 'convenience store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting in the convenience store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'in', 'object2': 'convenience store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has pink hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'pink'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has pink hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'pink'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is in a daze.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'in', 'object2': 'daze'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting in the convenience store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'in', 'object2': 'convenience store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is throwing shoes and bag in front of the front door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'throw', 'object2': 'shoes'}, {'object1': 'Heeran', 'relation': 'throw', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is throwing shoes and bag in front of the front door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'throw', 'object2': 'shoes'}, {'object1': 'Heeran', 'relation': 'throw', 'object2': 'bag'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 screams out at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'scream at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 turns her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung points at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'pointing front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling while turning her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling while turning her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a black jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding her hands together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hands', 'attribute': 'together'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 tied her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tie', 'object2': 'hair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is blinking his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone while touching her neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone while touching her neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'touch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing up from the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing up'}, {'object1': 'Haeyoung1', 'relation': 'from', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is about to stand up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing up'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'house'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is tearing up and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'tearing up'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung with tearing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'tearing up'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung turns his body. Haeyoung1 and Dokyung are looking at each other in the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'body'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'house'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is coming close to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'come close to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is coming close to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'come close to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1 in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1 with hugging her. Haeyoung1 sheds tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}, {'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sheds tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking forward'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crying on the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'cry on', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sitting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is covering her mouth with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is covering her mouth with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his hand off from his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'off'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin has angry look.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung stands across from Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stand across', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is scoffing in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'scoffing'}, {'object1': 'Taejin', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Taejin are talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taller than Taejin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'taller than', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung said Dokyung would take ten hits.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wants to hit a person in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'anxious'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is hanging from a rope.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hang from', 'object2': 'rope'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is staring at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'staring front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears a black sleeveless.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sleeveless', 'attribute': 'black'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'sleeveless'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung keeps his mouth closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is jumping to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'jump to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging a woman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'woman'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is saying something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his arm on Haeyoung1's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'arm'}, {'object1': 'arm', 'relation': 'on', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling brightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'brightly'}, {'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is hanging on the rock.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hang on', 'object2': 'rock'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears the white hoodie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hoodie', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'hoodie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking with an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'angry'}, {'object': 'Heeran', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is moving her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'move', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is shaking her face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'shake', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears gray clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'gray'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 keeps her mouth closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is staring at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'staring front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is turning her face to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'turn', 'object2': 'face'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is moving his chin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'move', 'object2': 'chin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking and yelling at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Dokyung', 'relation': 'yell at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking and yelling at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Dokyung', 'relation': 'yell at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking and yelling at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Dokyung', 'relation': 'yell at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears a watch. Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'watch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung talk to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is staring at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'staring front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking while looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Hun are having an argument.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'have argument with', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is rewinding the film.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'rewind', 'object2': 'film'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling with talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks excited.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'excited'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking with closing his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Yijoon is closing his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Yijoon', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is wearing mint color T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'mint'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sangseok', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is sitting on the car seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'sit on', 'object2': 'car seat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is thinking something deeply.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'thinking', 'attribute': 'deeply'}, {'object': 'Dokyung', 'attribute': 'thinking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are having a race in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'in', 'object2': 'playground'}, {'object1': 'people', 'relation': 'have', 'object2': 'race'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are running in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'run in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People look happy.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are running in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'run in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are playing in the playground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'play in', 'object2': 'playground'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are spinning around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'spinning around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are fading away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'people', 'attribute': 'fading away'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a white blouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'blouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are passing by Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'pass by', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing on the subway platform.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'platform', 'attribute': 'subway'}, {'object1': 'Haeyoung1', 'relation': 'stand on', 'object2': 'platform'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing on the subway platform.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'platform', 'attribute': 'subway'}, {'object1': 'Haeyoung1', 'relation': 'stand on', 'object2': 'platform'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears black pants.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'pants', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'pants'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's bag is white.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bag', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing among people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand among', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is in the subway station.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'subway station'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears sky blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'sky blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is doing her presentation with confidence.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'confident'}, {'object1': 'Haeyoung1', 'relation': 'do', 'object2': 'presentation'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 claps her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'clap', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 claps her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'clap', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is putting her hands on the back of her head with her eyes closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'put back of', 'object2': 'head'}, {'object1': 'Sukyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is putting her hands on the back of her head with her eyes closed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'put back of', 'object2': 'head'}, {'object1': 'Sukyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung and Haeyoung1 are arguing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'arguing'}, {'object': 'Sukyung', 'attribute': 'arguing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is telling her opinion.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'tell', 'object2': 'opinion'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung asks Haeyoung1 a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'ask to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung scoffed at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'scoff at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking ahead'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 was closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears gray shirts.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'gray'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is closing the curtains.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'curtains'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'bed'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shouting while sitting with a seat belt on.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'shouting'}, {'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'fastened', 'object2': 'seat belt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung laughs out loud.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing out'}, {'object': 'laughing out', 'attribute': 'loud'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung laughs out loud.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing out'}, {'object': 'laughing out', 'attribute': 'loud'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is cupping her hands around her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'around', 'object2': 'mouth'}, {'object1': 'Haeyoung1', 'relation': 'cup', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: People are walking along the beach.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'people', 'relation': 'walk along', 'object2': 'beach'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is trying to lift Haeyoung1 up by the beach.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'lift up', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'at', 'object2': 'beach'}, {'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'beach'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are smiling at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 asks someone a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks pleased.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'pleased'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a black coat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'coat', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'coat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is getting angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'get', 'object2': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has pink hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'pink'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting up again.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is turning her head and smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'smiling'}, {'object1': 'Anna', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is touching her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Anna', 'relation': 'touch', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing a white T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is turning her head with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has pink hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'pink'}, {'object1': 'Anna', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking up with talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'looking up'}, {'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking with blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'blinking'}, {'object': 'Anna', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The man is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'man', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The man is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'man', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a light blue shirt. Haeyoung1 blinks eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'light blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}, {'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is knocking on the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'knock', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is making a call and walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'call'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is making a call and walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'make', 'object2': 'call'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking and talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening the gate and getting out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'gate'}, {'object1': 'Haeyoung1', 'relation': 'get out of', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening the gate and getting out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'gate'}, {'object1': 'Haeyoung1', 'relation': 'get out of', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening the gate and getting out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'gate'}, {'object1': 'Haeyoung1', 'relation': 'get out of', 'object2': 'house'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is warning.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'warning'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 has a sad face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his eyes to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is opening his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is shedding tears while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'talking'}, {'object1': 'Haeyoung2', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 has pink lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lips', 'attribute': 'pink'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing behind the desk.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'behind', 'object2': 'desk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a navy cardigan.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cardigan', 'attribute': 'navy'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'cardigan'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: There is a fountain.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running ahead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'running'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is waving her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wave', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is flinching.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'flinching'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'hat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person picks up the food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'pick up', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is glancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'glancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is glancing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'glancing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is making fun of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'make fun of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is making fun of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'make fun of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is telling Dokyung to taste the lunch box at least.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'tell to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok wears a checkered shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'checkered'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok wears a checkered shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'checkered'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is glaring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'glaring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is trying to feed Dokyung some food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'feed', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is holding the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang got into the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'get into', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang got into the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'get into', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a black T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'black'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a black T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'black'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang took away Hun's phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'Hun'}, {'object1': 'Jinsang', 'relation': 'take away', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang took away Hun's phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'Hun'}, {'object1': 'Jinsang', 'relation': 'take away', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is excited.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'excited'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung walks by the water.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'walk by', 'object2': 'water'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's phone is ringing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'Dokyung'}, {'object': 'phone', 'attribute': 'ringing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung's phone is ringing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'Dokyung'}, {'object': 'phone', 'attribute': 'ringing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is answering his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is answering his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is talking on his cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'talk on', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking a question on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'asking'}, {'object1': 'Jinsang', 'relation': 'on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking a question on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'asking'}, {'object1': 'Jinsang', 'relation': 'on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is asking a question to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'ask to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung2 are standing on the road.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object': 'Haeyoung2', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'on', 'object2': 'road'}, {'object1': 'Haeyoung2', 'relation': 'on', 'object2': 'road'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'smile at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 and Dokyung are talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}, {'object': 'Haeyoung2', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is getting in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'get in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is leaving Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is leaving Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 woke up on bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'wake up'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bed'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is nodding his head with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'nod', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning against Dokyung's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'lean against', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his hand on Haeyoung1's shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'shoulder'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hand'}, {'object1': 'hand', 'relation': 'on', 'object2': 'shoulder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are looking at the screen with smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Dokyung and Haeyoung1', 'relation': 'look at', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1 with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing next to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is staring at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'stare at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing next to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a striped shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shirt', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is leaving with Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'leave with', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a striped shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shirt', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'looking back'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 holds a folder. Haeyoung1 looks at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'folder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung stands up from her seat. The desk is in front of Sukyung. Haeyoung1 is leaving the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'stand up from', 'object2': 'seat'}, {'object1': 'desk', 'relation': 'in front of', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung stands up from her seat. The desk is in front of Sukyung. Haeyoung1 is leaving the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'stand up from', 'object2': 'seat'}, {'object1': 'desk', 'relation': 'in front of', 'object2': 'Sukyung'}, {'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is walking near the desk. Sukyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'walking'}, {'object1': 'Sukyung', 'relation': 'near', 'object2': 'desk'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is showing the person's back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'show', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung ties her hair back. Sukyung wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'tie', 'object2': 'hair'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 close her eyes tightly and turns her body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'close', 'attribute': 'tightly'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking with getting cold feet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'feet', 'relation': 'get', 'object2': 'cold'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Sukyung. Sukyung wears green top.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'top', 'attribute': 'green'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Sukyung'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'top'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A memo is being written down on the planner.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'memo', 'relation': 'written on', 'object2': 'planner'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is reading a book. Haeyoung1 is writing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'writing'}, {'object1': 'Taejin', 'relation': 'read', 'object2': 'book'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is reading a book. Haeyoung1 is writing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'writing'}, {'object1': 'Taejin', 'relation': 'read', 'object2': 'book'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is cupping her chin in hand. Haeyoung1 is smiling and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'chin', 'relation': 'in', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'cup', 'object2': 'chin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is about to hug Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is about to hug Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking with Haeyoung1 on the bed. Wine and steak have been ready for Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk with', 'object2': 'Haeyoung1'}, {'object1': 'Taejin', 'relation': 'on', 'object2': 'bed'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'bed'}, {'object1': 'wine', 'relation': 'ready for', 'object2': 'Haeyoung1'}, {'object1': 'steak', 'relation': 'ready for', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's dress has a white collar. Haeyoung1 closes her eyes and sheds tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'dress', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}, {'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}, {'object1': 'Haeyoung1', 'relation': 'has', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has shed tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has shed tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shed', 'object2': 'tears'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi surprised something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is yelling in front of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'yelling'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears black glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in front of Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi got mad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'mad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 just smiled.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 said mom.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'say to', 'object2': 'mom'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is yelling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'yelling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing an apron.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wear', 'object2': 'apron'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Deogi are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Deogi'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is watching something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'watch', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has long hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'staring front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung gets coffee at a cafe.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'at', 'object2': 'caffe'}, {'object1': 'Dokyung', 'relation': 'get', 'object2': 'coffee'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung gets coffee at a cafe.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'at', 'object2': 'caffe'}, {'object1': 'Dokyung', 'relation': 'get', 'object2': 'coffee'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung joins Heeran at her table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'join', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung joins Heeran at her table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'join', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung joins Heeran at her table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'join', 'object2': 'Heeran'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a black jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The script written by Hun is on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'script', 'attribute': 'written by Hun'}, {'object1': 'script', 'relation': 'on', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at a man who is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'man', 'relation': 'wear', 'object2': 'glasses'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to the man.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'man'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in the field of reeds.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'field', 'relation': 'of', 'object2': 'reeds'}, {'object1': 'Dokyung', 'relation': 'stand in', 'object2': 'field'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in the field of reeds.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'field', 'relation': 'of', 'object2': 'reeds'}, {'object1': 'Dokyung', 'relation': 'stand in', 'object2': 'field'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding his hands around his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'around', 'object2': 'neck'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person uses the mouse to click something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mouse', 'relation': 'to', 'object2': 'click'}, {'object1': 'person', 'relation': 'use', 'object2': 'mouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person uses the mouse to click something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'mouse', 'relation': 'to', 'object2': 'click'}, {'object1': 'person', 'relation': 'use', 'object2': 'mouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sent an e-mail to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting his hand on his lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'on', 'object2': 'lips'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is moving the mouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'move', 'object2': 'mouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung hears his own voice from the voice recording.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hear', 'object2': 'voice recording'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to the voice file.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen', 'object2': 'voice file'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is listening to the voice file in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung2', 'relation': 'listen', 'object2': 'voice file'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to a person's talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a dress.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person wears a brown jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'brown'}, {'object1': 'person', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya and a person are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'face', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'listening'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a green color hat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hat', 'attribute': 'green'}, {'object1': 'Jiya', 'relation': 'wear', 'object2': 'hat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 eats rice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'rice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 eats rice.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'rice'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi slowly stands up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'standing up', 'attribute': 'slowly'}, {'object': 'Deogi', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi smashes Haeyoung1's head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'head', 'attribute': 'Haeyoung1'}, {'object1': 'Deogi', 'relation': 'smash', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 chews food slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'chew', 'attribute': 'slowly'}, {'object1': 'Haeyoung1', 'relation': 'chew', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi sobs sadly lying on the blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'sobbing'}, {'object': 'sobbing', 'attribute': 'sadly'}, {'object1': 'Deogi', 'relation': 'lie on', 'object2': 'blanket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Kyungsu are in the room together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'in', 'object2': 'room'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'room'}, {'object1': 'Deogi', 'relation': 'with', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi and Kyungsu are in the room together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'in', 'object2': 'room'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'room'}, {'object1': 'Deogi', 'relation': 'with', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu cries sadly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'crying'}, {'object': 'crying', 'attribute': 'sadly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is crying in agony.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'crying'}, {'object': 'crying', 'attribute': 'in agony'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking next to the ear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'ear'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung speaks French to herself.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'speak', 'object2': 'French'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is given a dish.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'receive', 'object2': 'dish'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is given a dish.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'receive', 'object2': 'dish'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung murmurs while the person talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'murmuring'}, {'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung murmurs while the person talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'murmuring'}, {'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person wears striped shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'striped'}, {'object1': 'person', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung heard that someone came last night and will be immigrating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'hearing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung cries out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'crying out'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang stops his car when Jinsang finds someone is crying.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'someone', 'attribute': 'crying'}, {'object1': 'Jinsang', 'relation': 'find', 'object2': 'someone'}, {'object1': 'Jinsang', 'relation': 'stop', 'object2': 'car'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is laughing out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laugh out'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'sit next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting with her head resting on her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'head', 'relation': 'rest on', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a green shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'green'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the passenger seat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'seat', 'attribute': 'passenger'}, {'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'seat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hitting Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hit', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is hugging Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hug', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a black shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding Haeyoung1's arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arms', 'attribute': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'arms'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is throwing a ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'throw', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is throwing a ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'throw', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is throwing a ball.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'throw', 'object2': 'ball'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised by the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is surprised by the sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a ponytail.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'ponytail'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 walked to the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk to', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung said don't be loud.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding the remote control.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'remote control'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a gray jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'gray'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a scar on her forehead.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'scar', 'relation': 'on', 'object2': 'forehead'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'scar'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving her body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing next to car door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object': 'door', 'attribute': 'car'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is putting something in a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put', 'object2': 'something'}, {'object1': 'something', 'relation': 'in', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking off his jacket next to car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'take off', 'object2': 'jacket'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a scar on her lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'scar', 'relation': 'on', 'object2': 'lips'}, {'object1': 'Haeyoung1', 'relation': 'has', 'object2': 'scar'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Chairman', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking to Dokyung with frown face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Chairman', 'attribute': 'frown'}, {'object1': 'Chairman', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking with moving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Chairman', 'attribute': 'talking'}, {'object1': 'Chairman', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Chairman', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking with frown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Chairman', 'attribute': 'talking'}, {'object': 'Chairman', 'attribute': 'frown'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at somewhere with a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'surprised'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Chairman is talking with clenching a fist.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Chairman', 'attribute': 'talking'}, {'object1': 'Chairman', 'relation': 'clench', 'object2': 'fist'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jiya are sitting at the table. Someone is holding the bill.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'someone', 'relation': 'hold', 'object2': 'bill'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 picks up her phone and gazes at the screen of the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'screen', 'attribute': 'phone'}, {'object1': 'Haeyoung2', 'relation': 'gaze at', 'object2': 'screen'}, {'object1': 'Haeyoung2', 'relation': 'pick up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is sitting on a chair in front of Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'sit on', 'object2': 'chair'}, {'object1': 'person', 'relation': 'in front of', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 gazes at the message without any words.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'gaze at', 'object2': 'message'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at her cell phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'cell phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'looking left'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing in front of Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object1': 'Jinsang', 'relation': 'in front of', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is pointing a finger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'point', 'object2': 'finger'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is pointing a finger.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'point', 'object2': 'finger'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is pointing at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'point at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is nodding her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'nod', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is listening.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'listening'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and a person are talking outside of the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'person'}, {'object1': 'Dokyung', 'relation': 'outside of', 'object2': 'car'}, {'object1': 'person', 'relation': 'outside of', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is looking at the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 has long hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 tied her hair to the back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hair', 'relation': 'to', 'object2': 'back'}, {'object1': 'Haeyoung2', 'relation': 'tie', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening her mouth slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'slightly'}, {'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is climbing over something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'climbing over'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is breathing hard.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'breathing', 'attribute': 'hard'}, {'object': 'Haeyoung2', 'attribute': 'breathing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is getting angry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is crying while smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}, {'object': 'Haeyoung2', 'attribute': 'crying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking with an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'angry'}, {'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is closing her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is turning his body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok tried to cover Hun's mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'mouth', 'attribute': 'Hun'}, {'object1': 'Sangseok', 'relation': 'cover', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding the umbrella.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'umbrella'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a shoulder bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'shoulder bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the rain.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk in', 'object2': 'rain'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking in the rain.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk in', 'object2': 'rain'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a broken umbrella.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'umbrella', 'attribute': 'broken'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'umbrella'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has long hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has long hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is walking next to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'walking'}, {'object1': 'Haeyoung2', 'relation': 'next to', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is raising his hands up in the air.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'raise', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a blue outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'outfit', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is explaining how to sprinkle the salt to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'explain', 'object2': 'method'}, {'object1': 'method', 'relation': 'for', 'object2': 'sprinkle salt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is raising his arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'have', 'object2': 'arms'}, {'object1': 'Jinsang', 'relation': 'raise', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is putting down his hands talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'put down', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a blue outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'outfit', 'attribute': 'blue'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang keeps talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang keeps talking using his hand gesture, while Dokyung is not listening to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'not listening'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'use', 'object2': 'hand gesture'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing in the market.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'market'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang talks to Dokyung with pointing at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'point at', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person touching the cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'touch', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is checking messages.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'check', 'object2': 'messages'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is at the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is at the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sat down on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit down on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 sat down on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit down on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person is writing messages on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'message', 'relation': 'on', 'object2': 'phone'}, {'object1': 'person', 'relation': 'write', 'object2': 'messages'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is touching his neck.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'touch', 'object2': 'neck'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is swinging his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'swing', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is drinking a bottle of beer.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'beer', 'attribute': 'bottle of'}, {'object1': 'Dokyung', 'relation': 'drink', 'object2': 'beer'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is entering the gate.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'enter', 'object2': 'gate'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is moving slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'moving', 'attribute': 'slightly'}, {'object': 'Haeyoung2', 'attribute': 'moving'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is leaving the place with a sigh.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sighing'}, {'object1': 'Jinsang', 'relation': 'leave', 'object2': 'place'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is opening her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking up front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is staring at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stare at', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are standing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing up'}, {'object': 'Haeyoung1', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a sad face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is opening her mouth slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks serious.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'serious'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears a knit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'knit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Sungjin look frightened.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'frightened'}, {'object': 'Sungjin', 'attribute': 'frightened'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a glass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'glass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has pink cheeks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cheeks', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'cheeks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin wears a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking next to Sungjin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Sungjin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is raising his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is headbanging at home. Dokyung and Jinsang are sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung, Jinsang', 'attribute': 'sitting'}, {'object1': 'Sukyung', 'relation': 'headbang at', 'object2': 'home'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is yelling at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'yell at', 'object2': 'home'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on a sofa and raising her leg. Jinsang looks at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'sofa'}, {'object1': 'Sukyung', 'relation': 'raise', 'object2': 'leg'}, {'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on a sofa and raising her leg. Jinsang looks at Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'sofa'}, {'object1': 'Sukyung', 'relation': 'raise', 'object2': 'leg'}, {'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Sukyung. Sukyung smiles.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'smiling'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is moving his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'move', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is whispering to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'whisper to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is whispering to Jinsang and spreading out her arms and chest.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'whisper to', 'object2': 'arms'}, {'object1': 'Sukyung', 'relation': 'spread out', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is yelling to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'yell to', 'object2': 'Sukyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is closing her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is about to hold Dokyung's hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hand', 'attribute': 'Dokyung'}, {'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is leaving after shaking hands with Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'leaving'}, {'object1': 'Dokyung', 'relation': 'shake', 'object2': 'hands'}, {'object1': 'hands', 'relation': 'with', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is walking with a bag in his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'bag', 'relation': 'in', 'object2': 'hand'}, {'object1': 'Dokyung', 'relation': 'with', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}, {'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'building'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking a question on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'asking'}, {'object1': 'Jinsang', 'relation': 'on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking a question through his cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'asking'}, {'object1': 'Jinsang', 'relation': 'through', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is asking a question through his cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'asking'}, {'object1': 'Jinsang', 'relation': 'through', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking on his cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk on', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung hangs up the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hang up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is crossing the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'cross', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking the street unsteadily.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'walk', 'attribute': 'unsteadily'}, {'object1': 'Haeyoung1', 'relation': 'walk', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has double eyelids.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyelids', 'attribute': 'double'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'eyelids'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung stops for a while and resumes walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'stop', 'object2': 'walking'}, {'object1': 'Dokyung', 'relation': 'resume', 'object2': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung holds the phone onto his ear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'phone', 'relation': 'on', 'object2': 'ear'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks sad.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sad'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is staring at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'stare at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is watching Dokyung and Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'watch', 'object2': 'Dokyung'}, {'object1': 'Taejin', 'relation': 'watch', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is bleeding on his lip.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'bleed on', 'object2': 'lip'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking away from Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk away from', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is sighing and touching his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'sighing'}, {'object1': 'Taejin', 'relation': 'touch', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is punching Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'punch', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is kicking the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'kick', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is suffering on the ground.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'suffering'}, {'object1': 'Dokyung', 'relation': 'on', 'object2': 'ground'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is riding a bike at the park.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ride', 'object2': 'bike'}, {'object1': 'Haeyoung1', 'relation': 'at', 'object2': 'park'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street with holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street with holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street with holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is carrying a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'carry', 'object2': 'bike'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a bike.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bike'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is receives the file folder from the person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'file folder', 'relation': 'from', 'object2': 'person'}, {'object1': 'Haeyoung2', 'relation': 'receive', 'object2': 'file folder'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sighing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sighing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking to the old lady sitting and selling on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lady', 'attribute': 'old'}, {'object': 'lady', 'attribute': 'sitting'}, {'object': 'lady', 'attribute': 'selling'}, {'object1': 'lady', 'relation': 'on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'walk to', 'object2': 'old lady'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking to the old lady sitting and selling on the street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'lady', 'attribute': 'old'}, {'object': 'lady', 'attribute': 'sitting'}, {'object': 'lady', 'attribute': 'selling'}, {'object1': 'lady', 'relation': 'on', 'object2': 'street'}, {'object1': 'Haeyoung1', 'relation': 'walk to', 'object2': 'old lady'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hits the closet with bat which makes the sound of a collision.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'closet', 'relation': 'with', 'object2': 'bat'}, {'object1': 'Sukyung', 'relation': 'hit', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hits the closet with bat which makes the sound of a collision.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'closet', 'relation': 'with', 'object2': 'bat'}, {'object1': 'Sukyung', 'relation': 'hit', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is leaning his head on the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'have', 'object2': 'head'}, {'object1': 'head', 'relation': 'lean on', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Sukyung scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'scared'}, {'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Jinsang while resting her bat on her shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'bat', 'relation': 'rested on', 'object2': 'shoulder'}, {'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'scared'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing a blue shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang turns down his head while Sukyung is putting down her bat from her shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'turn down', 'object2': 'head'}, {'object1': 'Sukyung', 'relation': 'put down', 'object2': 'bat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang turns down his head while Sukyung is putting down her bat from her shoulder.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'turn down', 'object2': 'head'}, {'object1': 'Sukyung', 'relation': 'put down', 'object2': 'bat'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 gets surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is standing next to Kyungsu. Deogi is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object': 'Deogi', 'attribute': 'standing'}, {'object1': 'Deogi', 'relation': 'next to', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running out of the room. Deogi follows Haeyoung1. Kyungsu follows Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'run out of', 'object2': 'room'}, {'object1': 'Deogi', 'relation': 'follow', 'object2': 'Haeyoung1'}, {'object1': 'Kyungsu', 'relation': 'follow', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking. Kyungsu is standing behind Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object': 'Kyungsu', 'attribute': 'standing'}, {'object1': 'Kyungsu', 'relation': 'behind', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi gets mad. Deogi is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'mad'}, {'object': 'Deogi', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi gets mad. Deogi is shouting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'mad'}, {'object': 'Deogi', 'attribute': 'shouting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown. Haeyoung1 is scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'scared'}, {'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi stretches arm forward. Deogi point at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'arm', 'attribute': 'forward'}, {'object1': 'Deogi', 'relation': 'stretch', 'object2': 'arm'}, {'object1': 'Deogi', 'relation': 'point at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is scared. Kyungsu is touching Deogi's back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'back', 'attribute': 'Deogi'}, {'object': 'Haeyoung1', 'attribute': 'scared'}, {'object1': 'Kyungsu', 'relation': 'touch', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is running away from Deogi. Kyungsu is surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'surprised'}, {'object1': 'Haeyoung1', 'relation': 'run away from', 'object2': 'Deogi'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks at her phone, standing still.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 answers the call from a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'answer', 'object2': 'call'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is holding a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'hold', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin unbuttons his shirt while talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'unbutton', 'object2': 'shirt'}, {'object1': 'Taejin', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone while holding her mobile phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking on the phone while holding her mobile phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking on the phone, holding his dark colored mobile phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'dark colored'}, {'object1': 'Taejin', 'relation': 'talk on', 'object2': 'phone'}, {'object1': 'Taejin', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is watching Dokyung walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Haeyoung1', 'relation': 'watch', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is making a sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'make', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling brightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object': 'smiling', 'attribute': 'brightly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is raising his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a black sweatshirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sweatshirt', 'attribute': 'black'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'sweatshirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is opening his mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'open', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Dokyung are sitting at a table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Dokyung are sitting at a table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'sit at', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'sit at', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang seems to be stressed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'stressed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing up from a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing up'}, {'object1': 'Jinsang', 'relation': 'from', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating a cup noodle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'cup noodle'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting in the car. Haeyoung1 has a blank face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'face', 'attribute': 'blank'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'face'}, {'object1': 'Haeyoung1', 'relation': 'sit in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are in the car. Dokyung is driving and looks at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are in the car. Dokyung is driving and looks at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the car. Dokyung is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the car. Dokyung is driving.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking and driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking and driving a car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'drive', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung. Haeyoung1 talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to Dokyung in the car. Dokyung is driving and surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'driving'}, {'object': 'Dokyung', 'attribute': 'surprised'}, {'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'car'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'car'}, {'object1': 'Haeyoung1', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are having a cup of tea. Dokyung and Haeyoung1 are sitting on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tea', 'attribute': 'a cup of'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'tea'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'tea'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'couch'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are having a cup of tea. Dokyung and Haeyoung1 are sitting on the couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tea', 'attribute': 'a cup of'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'tea'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'tea'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'couch'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are sitting on the couch. Haeyoung1 smiles. Dokyung looks at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'couch'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking. Dokyung listens to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking. Dokyung listens to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are sitting on the couch. Haeyoung1 is holding a cup in her hands. Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'couch'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'couch'}, {'object1': 'cup', 'relation': 'in', 'object2': 'hands'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 comes into house and is looking out the window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'comes into', 'object2': 'house'}, {'object1': 'Haeyoung2', 'relation': 'look out', 'object2': 'window'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the floor. Dokyung is standing next to the wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'floor'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is about to look back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Dokyung is leaving her room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'leave', 'object2': 'room'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is moving the bookcase.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'move', 'object2': 'bookcase'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking to herself.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is standing behind Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'stand behind', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a red dress and talks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'dress', 'attribute': 'red'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a red dress and talks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'dress', 'attribute': 'red'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'dress'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is showing her teeth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'show', 'object2': 'teeth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung wears white T-shirts.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirts', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is blinking his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taking out his hands from pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hands', 'relation': 'from', 'object2': 'pocket'}, {'object1': 'Dokyung', 'relation': 'take out', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning around his body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is going up stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'go up', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is coming into the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'come into', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is thinking of something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'thinking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is shocked.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'shocked'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking back and talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'looking back'}, {'object': 'Anna', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun wears red cap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'cap', 'attribute': 'red'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'cap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna bends her back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'bend', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna bends her back.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'bend', 'object2': 'back'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun puts his bag down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'put down', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna swings her arms.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'swing', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun nods and screams.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'screaming'}, {'object': 'Hun', 'attribute': 'nodding'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun runs into the sea.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'run into', 'object2': 'sea'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna and Hun hug each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'hug', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'hug', 'object2': 'Anna'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 shakes her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 waves her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wave', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin turns away from Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'turn away from', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Taejin walking away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'walking away'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Taejin walking away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'walking away'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Taejin'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person walks to the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'person', 'relation': 'walk to', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person smiles at the car window.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'window', 'attribute': 'car'}, {'object1': 'person', 'relation': 'smile at', 'object2': 'window'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stands silently.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'standing', 'attribute': 'silently'}, {'object': 'Haeyoung1', 'attribute': 'standing'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking and hugging Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object1': 'Sukyung', 'relation': 'hug', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hugs and is holding Dokyung's shoulder with her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shoulder', 'attribute': 'Dokyung'}, {'object1': 'Sukyung', 'relation': 'hug', 'object2': 'Dokyung'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'shoulder'}, {'object1': 'shoulder', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is holding on Sukyung and talking to her.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'hold on', 'object2': 'Sukyung'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang and Sukyung are having a conversation.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'have conversation with', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking behind Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'behind', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking behind Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'behind', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is coming close to Dokyung and talking to him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'come close to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is coming close to Dokyung and talking to him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'come close to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing near Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand near', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears a red muffler.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'muffler', 'attribute': 'red'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'muffler'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears an earring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears an earring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2's hair is a long curly hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object': 'hair', 'attribute': 'curly'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking front'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is glaring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'glaring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The hair of Sukyung is messy.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'messy'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The hair color of Sukyung is yellow.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'yellow'}, {'object1': 'Sukyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna has closed lips.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Anna', 'relation': 'close', 'object2': 'lips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding up the bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking of the price.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna told the price.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'telling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is crossing her legs on the chair. Heeran talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'on', 'object2': 'chair'}, {'object1': 'Heeran', 'relation': 'cross', 'object2': 'legs'}, {'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a white blouse. Heeran talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'white'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'blouse'}, {'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran wears a white blouse. Heeran talks to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'white'}, {'object1': 'Heeran', 'relation': 'wear', 'object2': 'blouse'}, {'object1': 'Heeran', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks surprised. Dokyung is thinking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'surprised'}, {'object': 'Dokyung', 'attribute': 'thinking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The phone rings. Heeran answers the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'ringing'}, {'object1': 'Heeran', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The phone rings. Heeran answers the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'ringing'}, {'object1': 'Heeran', 'relation': 'answer', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran smiles and raises her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'smiling'}, {'object1': 'Heeran', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a cast. Haeyoung1 holds the phone and raises her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'cast'}, {'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}, {'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung left the table. Heeran stands up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'standing up'}, {'object1': 'Dokyung', 'relation': 'leave', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving her arm.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'arm'}, {'object1': 'Haeyoung1', 'relation': 'move', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking sadly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sad'}, {'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung said do not cry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 hung up the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hang up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her face with her hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'face'}, {'object1': 'hand', 'relation': 'cover', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing pink clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'pink'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closes her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin smiles awkwardly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'awkwardly'}, {'object': 'Taejin', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears black jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'black'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin and Haeyoung1 stand facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Taejin', 'attribute': 'standing'}, {'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Taejin', 'relation': 'face', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking while holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 quickly hangs up her phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hang up', 'attribute': 'quickly'}, {'object1': 'Haeyoung1', 'relation': 'hang up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stays still in crouched position on the grass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crouched'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'grass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 stays still in crouched position on the grass.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'crouched'}, {'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'grass'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his phone off from his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'put off', 'object2': 'phone'}, {'object1': 'phone', 'relation': 'from', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung checks the screen of his phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'screen', 'attribute': 'phone'}, {'object1': 'Dokyung', 'relation': 'check', 'object2': 'screen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his phone down on his bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'phone', 'relation': 'on', 'object2': 'bed'}, {'object1': 'Dokyung', 'relation': 'put down', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his phone down on his bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'phone', 'relation': 'on', 'object2': 'bed'}, {'object1': 'Dokyung', 'relation': 'put down', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung lies straight and looks up the ceiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'lying straight'}, {'object1': 'Dokyung', 'relation': 'look up', 'object2': 'ceiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking next to Kyungsu.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Deogi', 'relation': 'next to', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at Deogi talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is encouraging Dokyung to eat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'encourage', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung and has an irritated face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'irritated'}, {'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is staring.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'staring'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is handing something forward.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hand', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is politely declining.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'declining'}, {'object': 'declining', 'attribute': 'politely'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting next to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closes her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is trying to pick up the meat with her chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'pick up', 'object2': 'meat'}, {'object1': 'meat', 'relation': 'with', 'object2': 'chopsticks'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is confused.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'Jinsang', 'attribute': 'confused'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is confused.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'Jinsang', 'attribute': 'confused'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is using chopsticks. Jinsang is sitting on sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'use', 'object2': 'chopsticks'}, {'object1': 'Jinsang', 'relation': 'sit on', 'object2': 'sofa'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is covering his mouth with hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang is covering his mouth with hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'cover', 'object2': 'mouth'}, {'object1': 'mouth', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang feels scared.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'scared'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang has got freaked out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'Jinsang', 'attribute': 'freaked out'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating. Jinsang has got freaked out.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'Jinsang', 'attribute': 'freaked out'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk in', 'object2': 'kitchen'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi tries to change Haeyoung1's mind.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'persuade', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has her hair tied at home.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'tied'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 says nothing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying nothing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is speaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'speaking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 drops tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drop', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 drops tears.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drop', 'object2': 'tears'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is asking a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 shuts her eyes tight and cries.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'eyes', 'attribute': 'tight'}, {'object': 'Haeyoung1', 'attribute': 'crying'}, {'object1': 'Haeyoung1', 'relation': 'shut', 'object2': 'eyes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object': 'Deogi', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has bangs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'bangs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The person puts down cooked shellfish in the bowl.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shellfish', 'attribute': 'cooked'}, {'object1': 'person', 'relation': 'put down', 'object2': 'shellfish'}, {'object1': 'shellfish', 'relation': 'in', 'object2': 'bowl'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling brightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'bright'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung drinks a shot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'drink', 'object2': 'shot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a happy face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'happy'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung tilts his head slightly to the side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'tilt', 'attribute': 'slightly'}, {'object1': 'Dokyung', 'relation': 'tilt', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung smiles while looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is lifting the spoon and bowl.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'lift', 'object2': 'bowl'}, {'object1': 'Hun', 'relation': 'lift', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'eating'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'sitting'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is raising her hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'raise', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is wearing blue clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'blue'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'eating'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'eating'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with a big smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'smiling'}, {'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is in front of a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'in front of', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a white blouse.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'blouse', 'attribute': 'white'}, {'object1': 'Sukyung', 'relation': 'wear', 'object2': 'blouse'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Persons are holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'persons', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung wears a necklace.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'wear', 'object2': 'necklace'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung threw the food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'throw', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is on the stage.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'on', 'object2': 'stage'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is clapping his hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'clap', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is singing with a microphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sing with', 'object2': 'microphone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is holding something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'hold', 'object2': 'something'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Kyungsu.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Kyungsu'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi wears brown clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'brown'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has a nervous face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'nervous'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu wears a gray jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'gray'}, {'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking front'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is lowering her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning her body to right side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is turning her body to right side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'turn', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is staring at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'stare at', 'object2': 'person'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok hits Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'hit', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok hits Gitae.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'hit', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating the kimbap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'kimbap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating the kimbap.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'eat', 'object2': 'kimbap'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating quietly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'eating', 'attribute': 'quietly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is eating quietly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'eating'}, {'object': 'eating', 'attribute': 'quietly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks up with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking up'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks up with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'looking up'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is joining and sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'joining'}, {'object': 'Sungjin', 'attribute': 'sitting down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is joining and sitting down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'joining'}, {'object': 'Sungjin', 'attribute': 'sitting down'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Dokyung are holding chopsticks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'chopsticks'}, {'object1': 'Dokyung', 'relation': 'hold', 'object2': 'chopsticks'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung hair is black.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a closed mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking why.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking with wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating a noodle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'noodle'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a bowl.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'bowl'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung blinks his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wants to drink cold beer and say goodbye.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking at the right side.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'side', 'attribute': 'right'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'side'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 sighs and talks.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'sighing'}, {'object': 'Haeyoung2', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wants to shake off her feelings towards someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'wanting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks up slowly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking up'}, {'object': 'looking up', 'attribute': 'slowly'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 smiled at someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'smile at', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung2 are facing each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'face', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is taller than Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'taller than', 'object2': 'Haeyoung2'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Dokyung in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are in the office. Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung, Jinsang', 'relation': 'in', 'object2': 'office'}, {'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are looking at each other in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Dokyung'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'office'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with nodding his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'nod', 'object2': 'head'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing red clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a school uniform.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'uniform', 'attribute': 'school'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'uniform'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is wearing a school uniform.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'uniform', 'attribute': 'school'}, {'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'uniform'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is standing in front of Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'standing'}, {'object1': 'Haeyoung2', 'relation': 'in front of', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is asking a question to Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'ask to', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'front'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is bragging on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'brag on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is bragging on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'brag on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'eating'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'call'}, {'object1': 'Deogi', 'relation': 'make', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'call'}, {'object1': 'Deogi', 'relation': 'make', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is making the phone call with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'phone', 'attribute': 'call'}, {'object1': 'Deogi', 'relation': 'make', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is sitting next to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'sitting'}, {'object1': 'Kyungsu', 'relation': 'next to', 'object2': 'Deogi'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking in the car.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'car'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is holding a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hold', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is dropping a cellphone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'drop', 'object2': 'cellphone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with an irritated face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'irritated'}, {'object': 'Jinsang', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 has a surprised face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding and looking at a carrot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'carrot'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'carrot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding and looking at a carrot.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'carrot'}, {'object1': 'Deogi', 'relation': 'look at', 'object2': 'carrot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a carrot at the traditional market.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'market', 'attribute': 'traditional'}, {'object1': 'Deogi', 'relation': 'at', 'object2': 'market'}, {'object1': 'Deogi', 'relation': 'hold', 'object2': 'carrot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a carrot at the traditional market.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'market', 'attribute': 'traditional'}, {'object1': 'Deogi', 'relation': 'at', 'object2': 'market'}, {'object1': 'Deogi', 'relation': 'hold', 'object2': 'carrot'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is putting her stuff on the bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'stuff'}, {'object1': 'stuff', 'relation': 'on', 'object2': 'bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is moving around the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'move around in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is organizing the closet.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'organize', 'object2': 'closet'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is walking out of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'walk out', 'object2': 'house'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is walking down the stairs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'walk down', 'object2': 'stairs'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is looking at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'look at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is laughing at someone's words.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'laughing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun and Jinsang are standing with their hands together.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hands', 'attribute': 'together'}, {'object1': 'Hun', 'relation': 'stand with', 'object2': 'hands'}, {'object1': 'Jinsang', 'relation': 'stand with', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at the two people in turn.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'people'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung, Hun and Jinsang are getting surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'surprised'}, {'object': 'Hun', 'attribute': 'surprised'}, {'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking. Jinsang and Hun are clapping their hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'clap', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is talking while looking up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'talking'}, {'object': 'Sukyung', 'attribute': 'looking up'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to someone with an irritated face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'irritated'}, {'object1': 'Jiya', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya, Sukyung, Hun, Jinsang gathered near a table. Jiya is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jiya', 'attribute': 'talking'}, {'object1': 'Jiya', 'relation': 'gather near', 'object2': 'table'}, {'object1': 'Sukyung', 'relation': 'gather near', 'object2': 'table'}, {'object1': 'Jinsang', 'relation': 'gather near', 'object2': 'table'}, {'object1': 'Hun', 'relation': 'gather near', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi stands up from the couch talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'talking'}, {'object': 'Dokyung', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing next to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to Deogi without saying anything.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi walks away after talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'walking away'}, {'object': 'Deogi', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is listening to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung lowers his head standing still while Deogi is leaving his house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'leave', 'object2': 'house'}, {'object1': 'Dokyung', 'relation': 'lower', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing next to a couch.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'couch'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung comes out of Dokyung's house closing the door while her husband, Kyungsu is waiting in front of the house.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'come out', 'object2': 'house'}, {'object1': 'Kyungsu', 'relation': 'wait', 'object2': 'Deogi'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is holding a phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'hold', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is getting upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is getting upset.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'upset'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi has an angry face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Deogi', 'attribute': 'angry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu stood up in the living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Kyungsu', 'attribute': 'standing up'}, {'object1': 'Kyungsu', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu looked at Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Deogi'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok is flipping Gitae over on the sand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sangseok', 'relation': 'flip over', 'object2': 'Gitae'}, {'object1': 'Gitae', 'relation': 'on', 'object2': 'sand'}, {'object1': 'Sangseok', 'relation': 'on', 'object2': 'sand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is turning to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'turn to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae is lying down on the sand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'lying down'}, {'object1': 'Gitae', 'relation': 'on', 'object2': 'sand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is holding a muffler.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'hold', 'object2': 'muffler'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is pointing at somewhere.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'point at', 'object2': 'somewhere'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is turning his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is getting closer to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'get close to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is running on the beach.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'running'}, {'object1': 'Jinsang', 'relation': 'on', 'object2': 'beach'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun tells Dokyung that it is almost done.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'telling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun turns his head to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun turns his head to the front.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung sighs and walks away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sighing'}, {'object': 'Dokyung', 'attribute': 'walking away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Dokyung while following him.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Dokyung'}, {'object1': 'Jiya', 'relation': 'follow', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is annoyed with someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'annoy with', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is looking at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'look at', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung says two times are enough.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya wears a striped jacket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'jacket', 'attribute': 'striped'}, {'object1': 'Jiya', 'relation': 'wear', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jiya is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jiya', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in the building.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand in', 'object2': 'building'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is in the elevator with people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'with', 'object2': 'people'}, {'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is in the elevator with people.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'with', 'object2': 'people'}, {'object1': 'Haeyoung2', 'relation': 'in', 'object2': 'elevator'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 has long hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'long'}, {'object1': 'Haeyoung2', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is in the office.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'in', 'object2': 'office'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is leaning on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lean on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is holding a bottle.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'hold', 'object2': 'bottle'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hits the dish with the spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hit', 'object2': 'dish'}, {'object1': 'dish', 'relation': 'with', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung hits the dish with the spoon.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hit', 'object2': 'dish'}, {'object1': 'dish', 'relation': 'with', 'object2': 'spoon'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting next to Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'sitting'}, {'object1': 'Dokyung', 'relation': 'next to', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun raises his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'raise', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a loaf of bread.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bread', 'attribute': 'loaf of'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bread'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a loaf of bread.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bread', 'attribute': 'loaf of'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bread'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun got manicures.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'get', 'object2': 'manicures'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung puts his arms on the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'arms', 'relation': 'on', 'object2': 'table'}, {'object1': 'Dokyung', 'relation': 'put', 'object2': 'arms'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is holding a piece of bread.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'bread', 'attribute': 'piece of'}, {'object1': 'Sukyung', 'relation': 'hold', 'object2': 'bread'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is nodding.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'nodding'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has nodded. Jinsang is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'nodding'}, {'object': 'Jinsang', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung got hit by the wall. Sukyung tries to take off the coat.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'hit by', 'object2': 'wall'}, {'object1': 'Sukyung', 'relation': 'take off', 'object2': 'coat'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung threw her jacket at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'jacket', 'relation': 'at', 'object2': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'throw', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung threw her jacket at Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'jacket', 'relation': 'at', 'object2': 'Jinsang'}, {'object1': 'Sukyung', 'relation': 'throw', 'object2': 'jacket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun looks at and asks Jinsang a question. Dokyung laughs.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'laughing'}, {'object1': 'Hun', 'relation': 'look at', 'object2': 'Jinsang'}, {'object1': 'Hun', 'relation': 'ask to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung hardened his face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'harden'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung2 are in wedding outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'with', 'object2': 'wedding outfit'}, {'object1': 'Haeyoung2', 'relation': 'with', 'object2': 'wedding outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung2 are in wedding outfit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'with', 'object2': 'wedding outfit'}, {'object1': 'Haeyoung2', 'relation': 'with', 'object2': 'wedding outfit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is saying her name while smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}, {'object': 'Haeyoung2', 'attribute': 'saying'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae and Sangseok are sitting across from each other. Gitae is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Sangseok', 'relation': 'sit across', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae and Sangseok are sitting across from each other. Gitae is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Sangseok', 'relation': 'sit across', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae touched his hair. Gitae is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'talking'}, {'object1': 'Gitae', 'relation': 'touch', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok's hair color is black. Sangseok wears military-type clothes. Yijoon is next to Sangseok.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'clothes', 'relation': 'military', 'object2': 'type'}, {'object1': 'Sangseok', 'relation': 'have', 'object2': 'hair'}, {'object1': 'Sangseok', 'relation': 'wear', 'object2': 'clothes'}, {'object1': 'Yijoon', 'relation': 'next to', 'object2': 'Sangseok'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is opening his eyes. Hun wears red clothes<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'red'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'clothes'}, {'object1': 'Hun', 'relation': 'open', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae talks to Hun. Gitae puts his hand on his chin.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'hand', 'relation': 'on', 'object2': 'chin'}, {'object1': 'Gitae', 'relation': 'put', 'object2': 'hand'}, {'object1': 'Gitae', 'relation': 'talk to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun talks to Gitae. Hun is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'laughing'}, {'object1': 'Hun', 'relation': 'talk to', 'object2': 'Gitae'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is laughing with putting his hand on the desk. Gitae, Sangseok, and Yijoon are around table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'laughing'}, {'object1': 'hand', 'relation': 'on', 'object2': 'desk'}, {'object1': 'Hun', 'relation': 'put', 'object2': 'hand'}, {'object1': 'Sangseok', 'relation': 'around', 'object2': 'table'}, {'object1': 'Gitae', 'relation': 'around', 'object2': 'table'}, {'object1': 'Yijoon', 'relation': 'around', 'object2': 'table'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Gitae wears a white T-shirt under the gray jacket. Gitae is laughing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Gitae', 'attribute': 'laughing'}, {'object': 'jacket', 'attribute': 'gray'}, {'object1': 'T', 'relation': 'shirt', 'object2': 'white'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sangseok smiles slightly. Yijoon smiles slightly.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'smiling', 'attribute': 'slight'}, {'object': 'Sangseok', 'attribute': 'smiling'}, {'object': 'Yijoon', 'attribute': 'smiling'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is raising her arms in front of Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'raise', 'object2': 'arms'}, {'object1': 'Haeyoung1', 'relation': 'in front of', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is getting close to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'get close to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'kissing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'kiss', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Haeyoung1 are kissing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'kiss', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging with a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hug with', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears jeans.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'jeans'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is hugging with closing her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'hugging'}, {'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is stepping back from Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'step back from', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung looks confused.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'confused'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 wears earrings.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'wear', 'object2': 'earrings'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Haeyoung2 are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Haeyoung2'}, {'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 and Haeyoung2 are looking at each other.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'Haeyoung2'}, {'object1': 'Haeyoung2', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is eating food with his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'eat', 'object2': 'food'}, {'object1': 'food', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is eating food with his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'eat', 'object2': 'food'}, {'object1': 'food', 'relation': 'with', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is praising the food for its good taste.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'praise', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is praising the food for its good taste.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sungjin', 'relation': 'praise', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking with his mouth full of food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'mouth', 'relation': 'full of', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sungjin is talking with his mouth full of food.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sungjin', 'attribute': 'talking'}, {'object1': 'mouth', 'relation': 'full of', 'object2': 'food'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is interrupted while trying to speak.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'interrupted'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi puts her arm down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'put down', 'object2': 'arm'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is moving her hand in the kitchen.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'have', 'object2': 'hand'}, {'object1': 'Deogi', 'relation': 'move', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wiping the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'wipe', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is wearing black clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'black'}, {'object1': 'Deogi', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is eating a chicken.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'eat', 'object2': 'chicken'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing yellow clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'yellow'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is sitting.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'sitting'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is talking in to the store.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Heeran', 'attribute': 'talking'}, {'object1': 'Heeran', 'relation': 'in', 'object2': 'store'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Heeran is walking around the table.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Heeran', 'relation': 'walk around', 'object2': 'table'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is looking at something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'look at', 'object2': 'object'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is raising his head with a sad face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'sad'}, {'object1': 'Jinsang', 'relation': 'raise', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is backing away.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'backing away'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the floor.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'floor'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is about to cry.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'about to', 'object2': 'cry'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing a red shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'red'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung tied her hair up.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'tie up', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is eating.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'eating'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 said stop it.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is approaching a wall.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'approach', 'object2': 'wall'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is opening the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 closed her mouth.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'close', 'object2': 'mouth'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are touching the bookshelf.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'touch', 'object2': 'bookshelf'}, {'object1': 'Jinsang', 'relation': 'touch', 'object2': 'bookshelf'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung has black hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'black'}, {'object1': 'Dokyung', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang has short hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'short'}, {'object1': 'Jinsang', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are listening to the strange sound.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'sound', 'attribute': 'strange'}, {'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'sound'}, {'object1': 'Jinsang', 'relation': 'listen to', 'object2': 'sound'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is drilling the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'drill', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is drilling the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'drill', 'object2': 'door'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is saying that Haeyoung1 is an easy woman.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is talking in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'talk in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is blinking her eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'blink', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing in the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'stand in', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is walking to the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'walk to', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 hurt her foot on the way to bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'hurt', 'object2': 'foot'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is shaking her body.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'shake', 'object2': 'body'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is covering her face with a blanket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'face', 'relation': 'with', 'object2': 'blanket'}, {'object1': 'Haeyoung1', 'relation': 'cover', 'object2': 'face'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is sitting on the chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks on the phone with her happy smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'lying down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung blinks his eyes holding up his phone onto the left side of his ear.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'hold up', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking to the right.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking right'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung keeps listening to Haeyoung1 talking on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'talking'}, {'object1': 'Dokyung', 'relation': 'listen to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is lying on the bed.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'lie on', 'object2': 'bed'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 talks on the phone smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'smiling'}, {'object1': 'Haeyoung1', 'relation': 'talk on', 'object2': 'phone'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the bed next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'bed'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Jinsang is gazing at Hun at a loss for words, Hun keeps nagging Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'nag', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: While Jinsang is gazing at Hun at a loss for words, Hun keeps nagging Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'gaze at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'nag', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is closing his eyes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'have', 'object2': 'eyes'}, {'object1': 'Hun', 'relation': 'close', 'object2': 'eyes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun keeps his conversation with Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on the bed next to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'bed'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is so concentrated on what Hun is saying that Hun doesn't realize that Jinsang is so irritated.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'saying'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 opens the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'open', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a plastic bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'plastic bag'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a pair of glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'pair'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears a pair of glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'pair'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing near the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'near', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing near the door.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'near', 'object2': 'door'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is putting her hands in the pocket.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'put', 'object2': 'hands'}, {'object1': 'hands', 'relation': 'in', 'object2': 'pocket'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 wears black glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'glasses', 'attribute': 'black'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking to someone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'talk to', 'object2': 'someone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'surprised'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is worried.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'worried'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is thinking about meeting someone for a while.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'thinking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 looks at a person with annoyed face.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'annoyed'}, {'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is asking a question.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'asking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is not okay.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'not okay'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 leaves Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'leave', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 turns her head to the left.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'turn', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is on the phone.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Sukyung', 'relation': 'on', 'object2': 'phone'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: A person is standing still.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'person', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is holding her bag.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'hold', 'object2': 'bag'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is swinging the flowers in front of the telephone pole.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'swing', 'object2': 'flowers'}, {'object1': 'Taejin', 'relation': 'in front of', 'object2': 'telephone pole'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: The petals of red roses are falling down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'roses', 'attribute': 'red'}, {'object': 'petal', 'attribute': 'falling down'}, {'object1': 'petal', 'relation': 'of', 'object2': 'roses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is talking to Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'talk to', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1's hair is brown.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'hair', 'attribute': 'brown'}, {'object1': 'Haeyoung1', 'relation': 'have', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a gray suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'gray'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a gray suit.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'suit', 'attribute': 'gray'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'suit'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin is standing by Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'stand by', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Taejin', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Taejin wears a tie.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Taejin', 'relation': 'wear', 'object2': 'tie'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is spelling her name.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'spell', 'object2': 'name'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung took off her T-shirt and put it on her head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is running away from Sukyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'run away from', 'object2': 'Sukyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is running into the room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'run into', 'object2': 'room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Sukyung is turning and walking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Sukyung', 'attribute': 'turning'}, {'object': 'Sukyung', 'attribute': 'walking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating a banana.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'eat', 'object2': 'banana'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'talking'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang looks surprised.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'surprised'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is holding a cup.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'hold', 'object2': 'cup'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears a white T-shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'T', 'relation': 'shirt', 'object2': 'white'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is sitting on a chair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'sit on', 'object2': 'chair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is talking to Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'talk to', 'object2': 'Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is pouring milk while talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'talking'}, {'object1': 'Hun', 'relation': 'pour', 'object2': 'milk'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Hun', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with his hips shaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'shake', 'object2': 'hips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking with his hips shaking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'talking'}, {'object1': 'Jinsang', 'relation': 'shake', 'object2': 'hips'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is wearing white clothes.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'clothes', 'attribute': 'white'}, {'object1': 'Jinsang', 'relation': 'wear', 'object2': 'clothes'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is standing.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'standing'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is eating something.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'eating'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is looking at a person.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'look at', 'object2': 'person'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is waving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wave', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is waving his hand.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wave', 'object2': 'hand'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is standing on street.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'standing'}, {'object1': 'Dokyung', 'relation': 'on', 'object2': 'street'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a white shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'shirt', 'attribute': 'white'}, {'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is waving both hands.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung1', 'relation': 'wave', 'object2': 'hands'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is stepping back with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'stepping back'}, {'object': 'Haeyoung1', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is nodding his head with a smile.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'smiling'}, {'object1': 'Dokyung', 'relation': 'nod', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang are walking in living room.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Jinsang', 'attribute': 'walking'}, {'object': 'Dokyung', 'attribute': 'walking'}, {'object1': 'Jinsang', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Dokyung', 'relation': 'in', 'object2': 'living room'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang meet Hun and Anna. Anna is saying hi to Dokyung and Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'say', 'attribute': 'hi'}, {'object1': 'Dokyung, Jinsang', 'relation': 'meet', 'object2': 'Hun, Anna'}, {'object1': 'Anna', 'relation': 'say to', 'object2': 'Dokyung, Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang meet Hun and Anna. Anna is saying hi to Dokyung and Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'say', 'attribute': 'hi'}, {'object1': 'Dokyung, Jinsang', 'relation': 'meet', 'object2': 'Hun, Anna'}, {'object1': 'Anna', 'relation': 'say to', 'object2': 'Dokyung, Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung and Jinsang look at Hun. Hun is talking to Dokyung and Jinsang.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung, Jinsang', 'relation': 'look at', 'object2': 'Hun'}, {'object1': 'Hun', 'relation': 'talk to', 'object2': 'Dokyung, Jinsang'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is telling. Anna is looking at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Hun', 'attribute': 'telling'}, {'object1': 'Anna', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is talking. Hun is next to Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is spinning around in living room. Hun is next to Anna.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'spinning around'}, {'object1': 'Anna', 'relation': 'in', 'object2': 'living room'}, {'object1': 'Hun', 'relation': 'next to', 'object2': 'Anna'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is saying her name herself. Anna smiles.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'saying'}, {'object': 'saying', 'attribute': 'name'}, {'object': 'Anna', 'attribute': 'smiling'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is talking to Hun. Dokyung looks at Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'talk to', 'object2': 'Hun'}, {'object1': 'Dokyung', 'relation': 'look at', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna and Hun are next to each other. Anna is talking.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'talking'}, {'object1': 'Anna', 'relation': 'next to', 'object2': 'Hun'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is bowing his head.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'bow', 'object2': 'head'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is looking down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Dokyung', 'attribute': 'looking down'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Dokyung is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Dokyung', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Deogi is talking to Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Deogi', 'relation': 'talk to', 'object2': 'Dokyung'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is standing next to Deogi.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung1', 'attribute': 'standing'}, {'object1': 'Haeyoung1', 'relation': 'next to', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is looking at Haeyoung1.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'look at', 'object2': 'Haeyoung1'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung1 is wearing a striped shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'shirt', 'relation': 'have', 'object2': 'stripes'}, {'object1': 'Haeyoung1', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is calming Deogi down.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'calm', 'object2': 'Deogi'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is wearing a shirt.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'wear', 'object2': 'shirt'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Kyungsu is pointing at Dokyung.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Kyungsu', 'relation': 'point at', 'object2': 'Dokyung'}]<|eot_id|>"}
{"Text_ZeroShot_Compressed":"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are an Knowledge Graph (KG) Extraction system designed to extract objects, relations and attributes from the given text, and create triples or doubles with them.\n    Ensure all triples and doubles are complete and accurately reflect the information in the input text.\n\n    Your responses must strictly adhere to the JSON formats provided below.\n    Always avoid including any additional notes, explanations, or extra text outside the JSON structure.\n    Make sure to find all triples and doubles you are confident about, but if you are not confident it's okay not to extract either one of them.\n\n    Respond with the following JSON string format: \n    {\n        \"extracted_KGs\": [\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object\": \"\",\n                \"attribute\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            },\n            {\n                \"object1\": \"\",\n                \"relation\": \"\",\n                \"object2\": \"\"\n            }\n        ]\n    }\n    If a double or triple is incomplete or cannot be determined, do not include it in the response.\n    The JSON must be valid and contain only the required fields.\n    Make sure not to contain trailing comma at the last element in each lists.\n    Make sure you have all the parenthesis, braces, and brackets correct so that json structure is preserved.\n    If there's nothing to extract, just leave the value for the key \"extracted_KGs\" as empty list like such: [].\n    \n\nFollowings are objects, attributes, and relations schemas defined in the current Knowledge-Base.\n    objects: ['The chairman', 'finger mouth', 'changes', 'flower pot', 'employees', 'smile', 'mustache', 'gold', 'Hum', 'hair color', 'downward', 'regret', 'snack', 'neck tie', 'shelf', 'upper body', 'lid', 'night', 'other side', 'words', 'stripes', 'whipping stick', 'position', 'poster', 'response', 'hanging', 'sushi', 'loaf', 'pan', 'ring', 'past', 'rice cooker', 'whiteboard', 'roses', 'bean sprout', 'product', 'racket', 'apology', 'acting', 'safety vest', 'karaoke', 'Dokyung and Kyungsu', 'grill', 'headphone', 'chin', 'buttons', 'makeup', 'cushion', 'sideways', 'bag', 'movie', 'mobile', 'cut', 'fountain', 'number', 'beer dispenser', 'other direction', 'belly', 'mint', 'crowd', 'up', 'arm', 'speech', 'somebody', 'flower bouquet', 'driveway', 'slap', 'dotted', 'card', 'strap', 'Sunjin', 'swing', 'running', 'sound tape', 'chicken', 'watermelon', 'chain', 'waists', 'bowtie', 'cast', 'Haeyoung1 have', 'lead', 'police office', 'keyboard', 'gown', \"Haeyoung1's face\", 'couch', 'lap', 'Waiter', 'other woman', 'bags', 'grass', 'upset', 'Hun', 'Someone', 'police', 'horse', 'shot glass', 'illusion', 'e-mail', 'hat', 'fire', 'five', 'headset', 'pain', 'bottle', 'pages', 'kimbap', 'leave', 'studio', 'sobbing', 'wind', 'walls', 'necklaces', 'delivery box', 'gear', 'expression', 'moment', 'Youngju', 'race', 'knot', 'document', 'voice recording', 'space bar', 'mad', 'horses', 'chilli pepper', 'stick out', 'basket', 'go board', 'pink', 'rose', 'roof', 'beverage', 'speaking', 'messages']\n    attributes: ['leather', 'seriously', 'driver', 'reluctantly', 'check', 'blond', 'yes', 'light brown', 'Taejin', 'looking side', 'whining', 'laughing', 'Jinsang', 'stepping back', 'dressed', 'bitter', 'bobbed', 'looking down', 'perm', 'high', 'irritably', 'sitting back', 'clutch', 'bittersweet', 'regretting', 'waking up', 'full', 'lowering', 'black and white', 'throwing', 'lighting up', 'flower shaped', 'nice', 'looking forward', 'looked back', 'left', 'pushed', 'high school graduation', 'in pain', 'black', 'burp', 'kissing', 'plant', 'smiling', 'spacing out', 'pair', 'small', 'same', 'shouting out', 'left lone', 'dazed', 'bit', 'rice', 'turning away', 'fierce', 'wailing', 'turning', 'hearing', 'hands', 'whiteboard', 'lost', 'looking straight', 'purple', 'scoffing', 'back of', 'shirts', 'speaking', 'circling around', 'down', 'Haeyoung1', 'thankful', 'stop walking', 'happy', 'watching', 'coming in', 'scary', 'suspicious', 'fading away', 'rushing', 'Hun', 'runing', 'anguish', 'accelerated', 'stop', 'wry', 'light pink', \"Sukyung's\", 'start moving', 'smirk', 'bus', 'stooping down', 'angrily', 'looking sideways', 'sullen', 'stop unbuttoning', 'looking right', 'eye', 'blue striped', 'broadly', 'resisting', 'table tennis', 'pearl', 'look right', 'river', 'swinging', 'blushing', 'cup of']\n    relations: ['greet to', 'wave at', 'walk arm in arm with', 'sit nex to', 'sneak into', 'talk in', 'eat at', 'fidget at', 'lean down', 'walk with', 'place', 'gulp down', 'bring back', 'contradict', 'dance in', 'rush into', 'shirt', 'persuade', 'mop', 'slap', 'look outside', 'stand beside', 'clean', 'shiver with', 'splash in', 'sit', 'put', 'like', 'ask for', 'let go', 'pass through', 'flush', 'put up', 'stand against', 'prepare', 'get out from', 'stuck to', 'get close', 'wrestle on', 'run to', 'back away from', 'walk along with', 'go into', 'thumb up', 'hold out', 'make', 'scuffle with', 'try to beat', 'come inside', 'apologize to', 'hang out with', 'speak in', 'pour into', 'take away', 'check', 'thumbs', 'black', 'walking with', 'rinse', 'light up', 'twirl', 'hide behind', 'approach', 'sit at', 'shock at', 'against', 'beam', 'bump', 'pass away', 'get close to', 'clink', 'stand in', 'cool down', 'explain to', 'dye', 'knock', 'struggle on', 'have a conversation with', 'hit', 'threaten', 'praise', 'blame', 'bow down to', 'go close', 'cheer', 'lie on', 'shift', 'refuse', 'smile to', 'sit around', 'whisper on', 'sit behind', 'sip', 'go back into', 'say with', 'wake up', 'separate by', 'lie next to', 'lean against', 'walk near', 'controll', 'strike on', 'sits on', 'crawl on', 'stand', 'stand next to', 'take out of', 'put off', 'lean on', 'ahead of', 'onn']\n    Make sure you extract objects, attributes, and relations that already exist in the provided schemas.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is touching her hair.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Haeyoung2', 'relation': 'touch', 'object2': 'hair'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is reading a book on the sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'on', 'object2': 'sofa'}, {'object1': 'Hun', 'relation': 'read', 'object2': 'book'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Hun is reading a book on the sofa.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Hun', 'relation': 'on', 'object2': 'sofa'}, {'object1': 'Hun', 'relation': 'read', 'object2': 'book'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang wears glasses.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'wear', 'object2': 'glasses'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Anna is standing next to Hun.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Anna', 'attribute': 'standing'}, {'object1': 'Anna', 'relation': 'next to', 'object2': 'Hun'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is opening the gate.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'open', 'object2': 'gate'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is turning around.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'turning around'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Jinsang is looking at Haeyoung2.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object1': 'Jinsang', 'relation': 'look at', 'object2': 'Haeyoung2'}]<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExtract list of KG(Knowledge Graph) doubles and triples from the following sentence: Haeyoung2 is smiling.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n[{'object': 'Haeyoung2', 'attribute': 'smiling'}]<|eot_id|>"}
